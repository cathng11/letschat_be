{"version":3,"sources":["ava.jpg","reportWebVitals.js","index.js","Components/Content/Components/LeftSideBar/Action.js","Components/Content/Components/LeftSideBar/Messages/Message.js","Components/Content/Components/LeftSideBar/Messages/ListMessages.js","Components/Content/Components/LeftSideBar/SearchMessage.js","Components/Content/Components/LeftSideBar/Contact/Contact.js","Components/Content/Components/LeftSideBar/Contact/ListContact.js","Components/Content/Components/LeftSideBar/Group/Group.js","Components/Content/Components/LeftSideBar/Group/ListGroup.js","Components/Content/Components/LeftSideBar/CreateNew/NewGroupChat/Contact.js","Components/Content/Components/LeftSideBar/CreateNew/NewChat.js","camera.jpg","Components/Content/Components/LeftSideBar/CreateNew/NewGroupChat.js","Components/Content/Components/LeftSideBar/CreateNew/NewContact.js","Components/Content/Components/LeftSideBar.js","Components/Content/Components/RightSideBar/addNewMember.js","Components/Content/Components/RightSideBar.js","Components/Content/Components/Conversation/MessageSend.js","Components/Content/Components/Conversation/MessageReceive.js","Components/Content/Components/ConvNonGroup.js","Components/Content/Components/ConvGroup.js","Components/Content/Content.js","Components/Footer/Footer.js","Components/Header/Components/Notification.js","Components/Header/Header.js","Home/App.js","Register/Register.js","Login/Login.js","Components/Header/Components/Account.js","Components/Header/Components/Account/Feedback.js","Components/Header/Components/Account/UpdateProfile.js","Components/Header/Components/Account/ChangePassword.js","Components/Header/Components/Account/Logout.js","service/UserService.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Login","document","getElementById","Action","props","onClick","list","onShowList","state","className","aria-hidden","Component","Message","onShowInfo","listMessages","Username","loadDefaultImage","e","target","src","tempAvatar","this","username","Avatar","data","onError","alt","Firstname","ID_Sender","ListMessages","showAllMess","map","mes","index","altEmptyList","style","width","height","margin","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","color","Object","keys","length","SearchMessage","onSearch","txtSearch","current","value","onEnterPress","key","preventDefault","createRef","type","placeholder","aria-label","ref","onKeyPress","Contact","listContact","Lastname","ListContact","showAllContact","contact","Group","onShowInfoGroup","listGroup","ID_Room","NameRoom","ListGroup","showAllGroup","group","addMember","newGrChat","setState","currentColor","openChatRoom","removeMember","backgroundColor","data-dismiss","dataDismiss","onDoubleClick","NewChat","event","name","close","keyword","notification","filter","toLowerCase","indexOf","showResult","id","tabIndex","data-backdrop","role","aria-labelledby","defaultValue","onChange","NewGroupChat","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","onChangeFile","files","res","r","slice","avaGr","URL","createObjectURL","listMemberGr","push","createChatRoom","a","generateID","inputFile","id_room","addParticipants","result","disabled","socket","io","emit","user","infoUser","createNewGr","array","Set","Array","from","onLoad","React","Math","floor","random","toString","substring","randomID","display","NewContact","searchUser","inputSearch","resultSearch","string","notificationSearch","catch","err","console","log","currentForm","insertFriend","sendRequest","dateFormat","Date","statusFr","checkStatusFr","loadHeader","onPrevious","pattern","Phone","Gender","DateOfBirth","LeftSideBar","DisplayList","modalNewAction","getListContact","getListMessages","getListGroup","findInfo","showInfo","forEach","indexGr","infoGr","infoGroup","searchData","setCurrentForm","nextProps","data-toggle","data-target","addNewMember","members","element","alert","RightSideBar","_isMounted","getInfoRoom","getListMembers","isFriend","isFr","tempGrAva","image","updateRoom","results","memberGroup","info","TimeOnline","TimeOffline","Email","Address","City","MessageSend","message","time","MessageReceive","ConvNonGroup","focusTxtMess","txtMessage","focus","getChat","getMessages","chats","mess","TimeSend","messages","onSendMessage","text","addMessage","closeConvTab","addEmoji","emoji","native","onUnfriend","idroom","friend","onAddfriend","idroom_temp","_onChange","onChangeMessage","on","response","newMessage","disconnect","prevProps","messagesEnd","scrollIntoView","block","behavior","m","listMessage","href","Time_Online","Time_Offline","aria-expanded","el","float","clear","onSelect","htmlFor","accept","rows","autoFocus","onKeyDown","ConvGroup","getMembers","getInfoMemGroup","mems","mem","findUsername","member","i","leaveGroup","Content","changeOnReload","onReload","reloadHeader","idroomTemp","welcome","altEmptyRightBar","Footer","Notification","getNotifications","notifications","isOpened","onAccept","sender","check","acceptFriendRequest","onRead","readNotification","listNotis","noti","IsFriend","Header","reload","Account","userFirstname","App","Register","onRegister","checkInput","checkRegister","pass","confirmPass","onHandleChange","names","values","phone","avatar","ava","onSubmit","required","div","focusUser","userInput","focusPass","passInput","onLogIn","login","Password","incorrectLogin","localStorage","setItem","JSON","stringify","onFocus","getItem","parse","marginTop","newAvatar","undefined","Buffer","Feedback","defaultChecked","UpdateProfile","updateUserProfile","data-error","data-success","checked","ChangePassword","changePass","oldpass","newpass","confpass","Logout","onLogOut","logout","removeItem","componentWillUnmount","fetch","method","headers","body","json","password","timeOnline","idRoom","user1","user2","receiver"],"mappings":"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","file":"static/js/main.a88a21ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ava.7a6a6c54.jpg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n// import App from './Home/App';\nimport reportWebVitals from './reportWebVitals';\nimport Login from './Login/Login.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Login />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react'\r\n\r\nclass Action extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: 'ListMessages'\r\n        }\r\n    }\r\n    onClick = (list) => {\r\n        this.props.onShowList(list);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row container side-button-list no-gutters\">\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                    <button \r\n                        className=\"side-button btn blue-gradient\"\r\n                        onClick={() => this.onClick('ListMessages')}\r\n                    >\r\n                        <span className=\"fas fa-bell side-button-icon\" aria-hidden=\"true\"></span>Chats</button>\r\n                </div>\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                    <button \r\n                    className=\"side-button btn\"\r\n                    onClick={() => this.onClick('ListGroup')}\r\n                    >\r\n                        <span className=\"fas fa-user-friends side-button-icon\" aria-hidden=\"true\"></span>GroupChat</button>\r\n                </div>\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                    <button \r\n                    className=\"side-button btn blue-gradient\" \r\n                    onClick={() => this.onClick('ListContact')}\r\n                    >\r\n                        <span className=\"fas fa-address-book side-button-icon\"aria-hidden=\"true\"></span>Contacts</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Action\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\nexport class Message extends Component {\r\n    onShowInfo = () => {\r\n        this.props.onShowInfo(this.props.listMessages.Username)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var { listMessages, username } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"chat-message\" onClick={this.onShowInfo}>\r\n                    <img\r\n                        src={\"data:image/*;base64,\" + listMessages.Avatar.data}\r\n                        className=\"img-responsive avatar\"\r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"name-receiver\">{listMessages.Firstname}</span>\r\n                        <span className=\"side-message\">\r\n                            {username === listMessages.ID_Sender ? \"You: \" : `${listMessages.Firstname}: `}{listMessages.Message}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","import React, { Component } from 'react'\r\nimport Message from './Message';\r\n\r\nexport class ListMessages extends Component {\r\n    render() {\r\n        var { listMessages } = this.props;\r\n        var showAllMess = listMessages.map((mes, index) => {\r\n            return (<Message\r\n                key={mes.Username}\r\n                index={index}\r\n                listMessages={listMessages[index]}\r\n                onShowInfo={this.props.onShowInfo}\r\n                username={this.props.username}\r\n            />);\r\n        })\r\n        var altEmptyList=\r\n        <div>\r\n            <div className=\"img-alt-empty-list mt-5\"\r\n                style={{\r\n                    width: \"150px\",\r\n                    height: \"150px\",\r\n                    margin:\"auto auto\",\r\n                    backgroundImage: \"url(\\\"https://cdn2.iconfinder.com/data/icons/ios7-inspired-mac-icon-set/1024/messages_5122x.png\\\")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize:\"cover\",\r\n                }}></div>\r\n            <div className=\"text-center mt-5\" style={{color:\"#1a237e\"}}><h4>Start chatting on LetsChat</h4></div>\r\n        </div>\r\n        return (\r\n            <div>\r\n                {Object.keys(showAllMess).length===0?altEmptyList:showAllMess}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ListMessages\r\n","import React, { Component, createRef } from 'react'\r\n\r\nexport class SearchMessage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.txtSearch = createRef();\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.onSearch(this.txtSearch.current.value);\r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.onSearch();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"search-area side-search\">\r\n                    <form className=\"form-inline d-flex justify-content-center md-form form-sm mt-0\">\r\n                        <i className=\"fas fa-search mb-1\" aria-hidden=\"true\"\r\n                            onClick={this.onSearch}\r\n                        ></i>\r\n                        <input className=\"txtSearchSideBar form-control-sm shadow-none border-bottom-0 ml-3 w-75 mb-0\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\" \r\n                            ref = {this.txtSearch}\r\n                            onKeyPress={this.onEnterPress}\r\n                        />\r\n                    </form>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchMessage\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\n\r\nexport class Contact extends Component {\r\n    onShowInfo = () => {\r\n        this.props.onShowInfo(this.props.listContact.Username)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var { listContact } = this.props;\r\n        return (\r\n            <div className=\"contact\"\r\n                \r\n                onClick={this.onShowInfo}\r\n                >\r\n                <img\r\n                    src={\"data:image/*;base64,\" + listContact.Avatar.data}\r\n                    className=\"img-responsive avatar\"\r\n                    onError={this.loadDefaultImage}\r\n                    alt=\"img\" />\r\n                <div>\r\n                    <span className=\"name-receiver\">{listContact.Firstname === '' ? listContact.Username : listContact.Firstname+\" \"+listContact.Lastname}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nexport class ListContact extends Component {\r\n\r\n    render() {\r\n        var { listContact } = this.props;\r\n        var showAllContact = listContact.map((contact, index) => {\r\n            return (<Contact\r\n                key={contact.Username}\r\n                index={index}\r\n                onShowInfo={this.props.onShowInfo}\r\n                listContact={listContact[index]}\r\n            />);\r\n        })\r\n        var altEmptyList=\r\n        <div>\r\n            <div className=\"img-alt-empty-list mt-5\"\r\n                style={{\r\n                    width: \"150px\",\r\n                    height: \"150px\",\r\n                    margin:\"auto auto\",\r\n                    backgroundImage: \"url(\\\"https://cdn4.iconfinder.com/data/icons/communication-179/64/x-18-512.png\\\")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize:\"cover\",\r\n                }}></div>\r\n            <div className=\"text-center mt-5\" style={{color:\"#1a237e\"}}><h4>Empty contact</h4></div>\r\n        </div>\r\n        return (\r\n            <div >\r\n                {Object.keys(showAllContact).length===0?altEmptyList:showAllContact }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListContact\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\n\r\nexport class Group extends Component {\r\n    onShowInfoGroup=()=>\r\n    {\r\n        this.props.onShowInfoGroup(this.props.listGroup.ID_Room)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var {listGroup, username}=this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"group\" onClick={this.onShowInfoGroup}>\r\n                    <img \r\n                        src={\"data:image/*;base64,\"+listGroup.Avatar.data}\r\n                        className=\"img-responsive avatar\" \r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"name-receiver\">{listGroup.NameRoom}</span>\r\n                        <span className=\"side-message\">\r\n                            {username === listGroup.ID_Sender ? \"You: \" : (listGroup.ID_Sender!==''?`${listGroup.Firstname}: `:'')}{listGroup.Message}\r\n                        </span>\r\n\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Group\r\n","import React, { Component } from 'react'\r\nimport Group from './Group';\r\n\r\nexport class ListGroup extends Component {\r\n    render() {\r\n        var { listGroup } = this.props;\r\n        var showAllGroup = listGroup.map((group, index) => {\r\n            return (<Group\r\n                key={group.ID_Room}\r\n                index={index}\r\n                listGroup={listGroup[index]}\r\n                onShowInfoGroup={this.props.onShowInfoGroup}\r\n                username = {this.props.username}\r\n            />);\r\n        })\r\n        var altEmptyList=\r\n        <div>\r\n            <div className=\"img-alt-empty-list mt-5\"\r\n                style={{\r\n                    width: \"150px\",\r\n                    height: \"150px\",\r\n                    margin:\"auto auto\",\r\n                    backgroundImage: \"url(\\\"https://i.pinimg.com/originals/3e/e6/dc/3ee6dc8aec204df4af789d7c21548f4a.png\\\")\",\r\n                    backgroundPosition: \"center\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize:\"cover\",\r\n                }}></div>\r\n            <div className=\"text-center mt-5\" style={{color:\"#1a237e\"}}><h4>Start chatting on LetsChat</h4></div>\r\n        </div>\r\n        return (\r\n            <div>\r\n                {Object.keys(showAllGroup).length===0?altEmptyList:showAllGroup}\r\n            </div>                \r\n        );\r\n    }\r\n}\r\n\r\nexport default ListGroup\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../../ava.jpg'\r\n\r\nexport class Contact extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            currentColor:\"white\",\r\n        }\r\n    }\r\n    addMember=()=>\r\n    {\r\n        if(this.props.newGrChat)\r\n        {\r\n            this.props.addMember(this.props.contact.Username)\r\n            this.setState({\r\n                currentColor:\"#d0d6e2\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.props.openChatRoom(this.props.contact.Username);\r\n        }\r\n\r\n    }\r\n    removeMember=()=>\r\n    {\r\n        this.props.removeMember(this.props.contact.Username)\r\n        this.setState({\r\n            currentColor:\"white\"\r\n        })\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var {contact}=this.props;\r\n        var {newGrChat}=this.props;\r\n        if(newGrChat)\r\n        {\r\n            return (\r\n                <div className=\"contact create-new\"\r\n                    style={{backgroundColor: this.state.currentColor}}\r\n                    onClick={this.addMember}\r\n                    data-dismiss={this.state.dataDismiss}\r\n                    onDoubleClick={this.removeMember}>\r\n                    <img\r\n                        src={\"data:image/*;base64,\"+contact.Avatar.data}\r\n                        className=\"img-responsive avatar\"\r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"username-receiver\">{contact.Username}</span>\r\n                        <span className=\"fullname-receiver grey-text\">{contact.Firstname+\" \"+contact.Lastname}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <div className=\"contact create-new\"\r\n                    style={{backgroundColor: this.state.currentColor}}\r\n                    onClick={this.addMember}\r\n                    data-dismiss=\"modal\">\r\n                    <img\r\n                        src={\"data:image/*;base64,\"+contact.Avatar.data}\r\n                        className=\"img-responsive avatar\"\r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"username-receiver\">{contact.Username}</span>\r\n                        <span className=\"fullname-receiver grey-text\">{contact.Firstname+\" \"+contact.Lastname}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\nimport { } from '../../../../../service/UserService';\r\nimport './CreateNew.css'\r\nimport Contact from './NewGroupChat/Contact';\r\n\r\nexport default class NewChat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            notification: '',\r\n        }\r\n    }\r\n\r\n    onSearch = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close = () => {\r\n        this.setState({\r\n            keyword: '',\r\n\r\n        })\r\n    }\r\n    render() {\r\n        var { listContact } = this.state;\r\n        if (this.state.keyword) {\r\n            listContact = listContact.filter((list) => {\r\n                return list.Username.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Lastname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Firstname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n\r\n            })\r\n        }\r\n        var showResult = listContact.map((contact, index) => {\r\n            return <Contact\r\n                key={contact.Username}\r\n                index={index + 1}\r\n                contact={contact}\r\n                newGrChat={false}\r\n                openChatRoom={this.props.openChatRoom}\r\n            />\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"ModalNewChat\" tabIndex=\"-1\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">NewChat</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body  \">\r\n                                <div className=\"md-form \">\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"keyword\"\r\n                                        defaultValue={this.state.keyword}\r\n                                        onChange={this.onSearch}\r\n                                        placeholder=\"Search\"\r\n                                        aria-label=\"Search\" />\r\n                                </div>\r\n                                <span className=\"txt-side-bar ml-0\">PEOPLE</span>\r\n                                <div className=\"result-search ml-1 mb-3\">\r\n                                    {showResult}\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"text-center\">{this.state.notification}</span>\r\n                            <div className=\"modal-footer d-flex justify-content-center\">\r\n                                <button\r\n                                    className=\"btn \"\r\n                                    id=\"btnClose\"\r\n                                    onClick={this.close}\r\n                                    data-dismiss=\"modal\"\r\n                                >Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/camera.ec8e0077.jpg\";","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../camera.jpg'\r\nimport { addParticipants, createChatRoom } from '../../../../../service/UserService';\r\nimport './CreateNew.css'\r\nimport Contact from './NewGroupChat/Contact';\r\nimport Resizer from 'react-image-file-resizer'\r\nimport io from 'socket.io-client';\r\n\r\nexport default class NewGroupChat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: '',\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            listMemberGr: [],\r\n            avaGr: '',\r\n            notification: '',\r\n            id_room: '',\r\n            disabled:''\r\n        }\r\n        this.socket=null;\r\n        this.inputFile = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        \r\n        var {listMemberGr} = this.state;\r\n        listMemberGr.push(this.props.infoUser.Username);\r\n        this.setState({listMemberGr: listMemberGr});\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 150, 150, 'JPEG', 100, 0,\r\n            uri => {\r\n                resolve(uri);\r\n            },\r\n            'base64'\r\n        );\r\n    })\r\n    onChangeFile = (e) => {\r\n        var target = e.target.files[0];\r\n        const image = this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',') + 1);\r\n            this.setState({\r\n                avaGr: r,\r\n                file: URL.createObjectURL(e.target.files[0])\r\n            })\r\n        });\r\n    }\r\n    onSearch = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    addMember = (data) => {\r\n        this.state.listMemberGr.push(data);\r\n    }\r\n    removeMember = (data) => {\r\n        this.setState({\r\n            listMemberGr: this.state.listMemberGr.filter((list) => {\r\n                return list !== data\r\n            })\r\n        })\r\n    }\r\n    createChatRoom = async () => {\r\n        await createChatRoom(this.generateID(), this.inputFile.current.value, this.state.avaGr)\r\n            .then(res => {\r\n                this.setState({\r\n                    id_room: res.id_room\r\n                })\r\n            })\r\n    }\r\n    addParticipants = async () => {\r\n        await addParticipants(this.generateID(), this.state.id_room, this.state.listMemberGr)\r\n            .then(res => {\r\n                this.setState({\r\n                    notification: res.result,\r\n                    disabled: true\r\n                })\r\n                if(this.state.notification==='Create group successfully')\r\n                {\r\n                    this.socket = io('https://shrouded-castle-36016.herokuapp.com/');\r\n                     this.socket.emit('creategroup',{id:this.state.id_room,user:this.props.infoUser.Username})\r\n                }\r\n            })\r\n    }\r\n    createNewGr = async(e) => {\r\n        //remove duplicate data in listMemberGr\r\n        const array = new Set(this.state.listMemberGr)\r\n        this.setState({\r\n            listMemberGr: Array.from(new Set(array))\r\n        })\r\n        if (this.inputFile.current.value && this.state.listMemberGr.length >2) {\r\n            await this.createChatRoom();\r\n            if (this.state.id_room!==-1 && this.state.id_room) {\r\n                await this.addParticipants();\r\n            }\r\n        }\r\n        else {\r\n            if (!this.inputFile.current.value)\r\n                this.setState({\r\n                    notification: \"Group name can not be empty\"\r\n                })\r\n            if (this.state.listMemberGr.length <2)\r\n                this.setState({\r\n                    notification: \"Number of members must be more than 2\"\r\n                })\r\n        }\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close=(e)=>\r\n    {\r\n        this.setState({\r\n            file: '',\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            listMemberGr: [],\r\n            avaGr: '',\r\n            notification: '',\r\n            id_room: '',\r\n            disabled:''\r\n        })\r\n        this.props.onLoad();\r\n    }\r\n    render() {\r\n        var { listContact } = this.state;\r\n        if (this.state.keyword) {\r\n            listContact = listContact.filter((list) => {\r\n                return list.Username.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Lastname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Firstname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n\r\n            })\r\n        }\r\n        var showResult = listContact.map((contact, index) => {\r\n            return <Contact\r\n                key={contact.Username}\r\n                index={index + 1}\r\n                newGrChat={true}\r\n                contact={contact}\r\n                addMember={this.addMember}\r\n                removeMember={this.removeMember}\r\n            />\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"ModalNewGroupChat\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\" data-backdrop=\"static\">\r\n                    <div className=\"modal-dialog cascading-modal modal-avatar\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header mb-0 pb-0\">\r\n                                <div className=\"file-field text-center\">\r\n                                    <div className=\"d-flex justify-content-center mb-1\">\r\n                                        <label src={this.state.file}\r\n                                            alt=\"ava\"\r\n                                            onError={this.loadDefaultImage}\r\n                                            className=\"rounded-circle img-responsive modal-title avatar-pic-gr\"\r\n                                            style={this.state.file === '' ? { backgroundImage: \"url('\" + tempAvatar + \"')\" }\r\n                                             : { backgroundImage: \"url('\" + this.state.file + \"')\" }}\r\n                                        >\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ display: \"none\" }}\r\n                                                onChange={this.onChangeFile}\r\n                                            />\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"modal-body  \">\r\n                                <div className=\"md-form ml-0 mr-0 \">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Group name\"\r\n                                        id=\"txtEnterGroupName\"\r\n                                        name=\"grName\"\r\n                                        ref={this.inputFile}\r\n                                        className=\"enter-group-name form-control form-control-sm text-center ml-0\" />\r\n                                </div>\r\n                                <h5 className=\"text-center\">Add member of group</h5>\r\n                                <div className=\"md-form \">\r\n                                    <div className=\"md-form \">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"keyword\"\r\n                                            defaultValue={this.state.keyword}\r\n                                            onChange={this.onSearch}\r\n                                            placeholder=\"Search\"\r\n                                            aria-label=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"result-search ml-1 mb-3\">\r\n                                        {showResult}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"text-center\">{this.state.notification}</span>\r\n\r\n                            <div className=\"modal-footer d-flex justify-content-center\">\r\n                                <button\r\n                                    className=\"btn blue-gradient\"\r\n                                    id=\"btnDone\"\r\n                                    disabled={this.state.disabled}\r\n                                    onClick={this.createNewGr}\r\n                                >Create</button>\r\n                                <button\r\n                                    className=\"btn \"\r\n                                    id=\"btnClose\"\r\n                                    onClick={this.close}\r\n                                    data-dismiss=\"modal\"\r\n                                >Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\nimport dateFormat from 'dateformat';\r\nimport { checkStatusFr, searchUser, sendRequest } from '../../../../../service/UserService';\r\nimport './CreateNew.css'\r\nexport default class NewContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentForm: this.props.currentForm,\r\n            notificationSearch: '',\r\n            resultSearch:null,\r\n            statusFr:''\r\n        }\r\n        this.inputSearch = createRef();\r\n    }\r\n\r\n    onSearch = async (e) => {\r\n        e.preventDefault();\r\n        await searchUser(this.inputSearch.current.value)\r\n        .then(res=>\r\n            {\r\n                this.setState({\r\n                    resultSearch:res.string,\r\n                    notificationSearch:res.result\r\n                })\r\n            }).catch(err=>console.log(err));\r\n        if(this.state.notificationSearch==='Phone number is existing')\r\n        {\r\n            this.setState({\r\n                currentForm: 'formResult'\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    insertFriend=async()=>\r\n    {\r\n        await sendRequest(this.generateID(),this.props.infoUser.Username,this.state.resultSearch.Username,dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"))\r\n        .then(res=>\r\n            this.setState({\r\n                statusFr:res.result\r\n            })\r\n            ).catch(err=>console.log(err));\r\n    }\r\n    sendRequest=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        await checkStatusFr(this.props.infoUser.Username,this.state.resultSearch.Username)\r\n        .then(res=>\r\n            {\r\n                if(res.result===\"Not friend\")\r\n                {\r\n                    this.props.loadHeader(this.state.resultSearch.Username);\r\n                    this.insertFriend();\r\n                }\r\n                else\r\n                    this.setState({\r\n                        statusFr:res.result\r\n                    })\r\n            }\r\n            ).catch(err=>console.log(err));\r\n    }\r\n    onPrevious = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            currentForm: 'formSearch',\r\n            notificationSearch:''\r\n        })\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentForm: 'formSearch',\r\n            notificationSearch:'',\r\n            statusFr:''\r\n        })\r\n    }\r\n    close=()=>\r\n    {\r\n        this.setState({\r\n            currentForm: 'formSearch',\r\n            notificationSearch:'',\r\n            statusFr:''\r\n        })\r\n    }\r\n    render() {\r\n        var current;\r\n        if (this.state.currentForm === 'formSearch') {\r\n            current = <div >\r\n                <div className=\"md-form \">\r\n                    <div className=\"md-form mt-0\">\r\n                        <input\r\n                            type=\"tel\"\r\n                            id=\"phoneSearch\"\r\n                            pattern=\"[0]{1}[0-9]{9}\"\r\n                            className=\"form-control text-center\"\r\n                            placeholder=\"Enter phone number\"\r\n                            aria-label=\"Search\"\r\n                            ref={this.inputSearch}\r\n                        />\r\n                    </div>\r\n                    <span className=\"notification-search d-flex justify-content-center\">\r\n                        {this.state.notificationSearch}\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal-footer d-flex justify-content-center\">\r\n                    <button\r\n                        className=\"btn blue-gradient\"\r\n                        id=\"btnSearch\"\r\n                        onClick={this.onSearch}\r\n                    >Search</button>\r\n\r\n                    <button\r\n                        className=\"btn \"\r\n                        id=\"btnCancel\"\r\n                        data-dismiss=\"modal\"\r\n                        onClick={this.close}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        }\r\n        else {\r\n            var {resultSearch}=this.state;\r\n            current = <div >\r\n                <div className=\"modal-header md-form result-search\">\r\n\r\n                    <img\r\n                        src={\"data:image/jpg;base64,\" + this.state.resultSearch.Avatar.data}\r\n                        alt=\"ava\"\r\n                        onError={this.loadDefaultImage}\r\n                        className=\"rounded-circle avatar-search-user\"\r\n                    />\r\n\r\n                </div>\r\n                <h5 className=\"mt-1 text-center\"><b>{resultSearch.Firstname===''?resultSearch.Username:(resultSearch.Firstname+\" \"+resultSearch.Lastname)}</b></h5>\r\n                <table className=\"md-form modal-body tbl-info-result-search\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Phone:</td>\r\n                            <td >{resultSearch.Phone}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender:</td>\r\n                            <td >{resultSearch.Gender===0?'Male':'Female'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Birthday:</td>\r\n                            <td >{resultSearch.DateOfBirth}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"modal-footer d-flex justify-content-center notification-result-search\">\r\n                    {this.state.statusFr}\r\n                </div>\r\n                <div className=\"modal-footer d-flex justify-content-center\">\r\n                    <button\r\n                        className=\"btn\"\r\n                        id=\"btnPrevious\"\r\n                        onClick={this.onPrevious}\r\n                    >Previous</button>\r\n                    <button\r\n                        className=\"btn blue-gradient\"\r\n                        id=\"btnAdd\"\r\n                        onClick={this.sendRequest}\r\n                    >Send request</button>\r\n                    <button\r\n                        className=\"btn \"\r\n                        id=\"btnCancel\"\r\n                        data-dismiss=\"modal\"\r\n                        onClick={this.close}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade \" id=\"ModalNewContact\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"false\" data-backdrop=\"static\">\r\n                    <div className=\"modal-dialog \" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">Add New Contact</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={this.close} aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div >\r\n                                <form className=\"modal-body mx-3\">\r\n                                    {current}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Action from './LeftSideBar/Action'\r\nimport ListMessages from './LeftSideBar/Messages/ListMessages'\r\nimport SearchMessage from './LeftSideBar/SearchMessage'\r\nimport ListContact from './LeftSideBar/Contact/ListContact'\r\nimport ListGroup from './LeftSideBar/Group/ListGroup'\r\nimport './LeftSideBar/LeftSideBar.css'\r\nimport { getListContact, getListGroup, getListMessages } from '../../../service/UserService'\r\nimport NewChat from './LeftSideBar/CreateNew/NewChat'\r\nimport NewGroupChat from './LeftSideBar/CreateNew/NewGroupChat'\r\nimport NewContact from './LeftSideBar/CreateNew/NewContact'\r\n\r\nclass LeftSideBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            DisplayList: 'ListMessages',\r\n            modalNewAction: '#ModalNewChat',\r\n            // showInfoGroup: [],\r\n            showInfo: null,\r\n            listContact: [],\r\n            listMessages: [],\r\n            listGroup: [],\r\n            currentForm: 'formSearch'\r\n        }\r\n    }\r\n    onShowList = (list) => {\r\n        if (list === 'ListContact') {\r\n            this.setState({\r\n                DisplayList: 'ListContact',\r\n                modalNewAction: '#ModalNewContact'\r\n            });\r\n            this.getListContact('');\r\n        }\r\n        if (list === 'ListMessages') {\r\n            this.setState({\r\n                DisplayList: 'ListMessages',\r\n                modalNewAction: '#ModalNewChat'\r\n            })\r\n            this.getListMessages('');\r\n            // this.getListContact('');\r\n        }\r\n        if (list === 'ListGroup') {\r\n            this.setState({\r\n                DisplayList: 'ListGroup',\r\n                modalNewAction: '#ModalNewGroupChat'\r\n            })\r\n            this.getListGroup('');\r\n            // this.getListContact('');\r\n        }\r\n    }\r\n    onShowInfo = async (username) => {\r\n        var list;\r\n        if (this.state.DisplayList === 'ListMessages') {\r\n            list = this.state.listMessages;\r\n        } else {\r\n            list = this.state.listContact\r\n        };\r\n        var index = this.findInfo(username);\r\n        var showInfo = list[index];\r\n        await this.setState({\r\n            showInfo: showInfo\r\n        })\r\n        this.props.showInfo(this.state.showInfo);\r\n    }\r\n    findInfo = (username) => {\r\n        var result = -1;\r\n        var list;\r\n        if (this.state.DisplayList === 'ListMessages') {\r\n            list = this.state.listMessages;\r\n        } else {\r\n            list = this.state.listContact\r\n        };\r\n        list.forEach((list, index) => {\r\n            if (list.Username === username)\r\n                result = index;\r\n        })\r\n        return result;\r\n    }\r\n    onShowInfoGroup = async (ID_Room) => {\r\n        var { listGroup } = this.state;\r\n        var indexGr = -1;\r\n        listGroup.forEach((list, index) => {\r\n            if (list.ID_Room === ID_Room)\r\n                indexGr = index;\r\n        })\r\n        var infoGr = listGroup[indexGr];\r\n        this.props.infoGroup(infoGr);\r\n    }\r\n    getListContact = async (txtSearch) => {\r\n        await getListContact([this.props.username, txtSearch])\r\n            .then(res =>\r\n                this.setState({\r\n                    listContact: res\r\n                })\r\n            ).catch(err => console.log(err));\r\n    }\r\n    getListMessages = async (txtSearch) => {\r\n        await getListMessages([this.props.username, txtSearch])\r\n            .then(res =>\r\n                this.setState({\r\n                    listMessages: res\r\n                })\r\n                \r\n            ).catch(err => console.log(err));\r\n    }\r\n    getListGroup = async (txtSearch) => {\r\n        await getListGroup([this.props.username, txtSearch])\r\n            .then(res =>\r\n                this.setState({\r\n                    listGroup: res\r\n                })).catch(err => console.log(err));\r\n    }\r\n    componentDidMount() {\r\n        this.getListMessages('');\r\n        this.getListContact('');\r\n        this.getListGroup('');\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            this.searchData('');\r\n        }\r\n    }\r\n    onSearch = (data) => {\r\n        this.searchData(data);\r\n    }\r\n    searchData = (txtSearch) => {\r\n        var {DisplayList} = this.state;\r\n        if (DisplayList === 'ListContact') {\r\n            this.getListContact(txtSearch);\r\n        }\r\n        if (DisplayList === 'ListMessages') {\r\n            this.getListMessages(txtSearch);\r\n        }\r\n        if (DisplayList === 'ListGroup') {\r\n            this.getListGroup(txtSearch);\r\n        }\r\n    }\r\n    setCurrentForm = () => {\r\n        this.setState({\r\n            currentForm: 'formSearch'\r\n        })\r\n    }\r\n    openChatRoom=async(username)=>\r\n    {\r\n        await this.setState({\r\n            DisplayList:'ListContact',\r\n        })\r\n        var list;\r\n        list = this.state.listContact\r\n        var index = this.findInfo(username);\r\n        var showInfo = list[index];\r\n        await this.setState({\r\n            showInfo: showInfo\r\n        })\r\n        this.props.showInfo(this.state.showInfo)\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    loadHeader = (data) => {\r\n        this.props.loadHeader(data);\r\n    }\r\n    render() {\r\n        var { DisplayList, listGroup, listContact, listMessages } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"side-bar\">\r\n                    <div className=\"row search-side-bar\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <SearchMessage  onSearch={this.onSearch}/>\r\n                        </div>\r\n                    </div>\r\n                    <Action\r\n                        onShowList={this.onShowList}\r\n                    />\r\n                    <button\r\n                        className=\"row btn new-event\"\r\n                        data-toggle=\"modal\"\r\n                        onClick={this.setCurrentForm}\r\n                        data-target={this.state.modalNewAction}>\r\n                        <i className=\"fas fa-user-plus\"></i>\r\n                        {DisplayList === 'ListMessages' ? 'New chat' : (DisplayList === 'ListContact' ? 'New contact' : 'New group chat')}\r\n                    </button>\r\n                    <div className=\"side-bar-content\">\r\n                        <div className=\"list-side-bar-content heading\">\r\n                            <span className=\"txt-side-bar\">\r\n                                {DisplayList === 'ListMessages' ? 'MY MESSAGES' : (DisplayList === 'ListContact' ? 'MY CONTACT' : 'MY GROUP')}</span>\r\n                        </div>\r\n                        <div className=\"list-side-bar-content body \">\r\n                            {DisplayList === 'ListMessages' ?\r\n                                <ListMessages username={this.props.username} onShowInfo={this.onShowInfo} listMessages={listMessages} /> : (DisplayList === 'ListContact' ?\r\n                                    <ListContact onShowInfo={this.onShowInfo} listContact={listContact} /> :\r\n                                    <ListGroup username={this.props.username} onShowInfoGroup={this.onShowInfoGroup} listGroup={listGroup} />)}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <NewChat\r\n                    key={this.generateID()}\r\n                    infoUser={this.props.infoUser}\r\n                    listContact={this.state.listContact} \r\n                    openChatRoom={this.openChatRoom}/>\r\n                <NewGroupChat\r\n                    key={this.generateID()}\r\n                    infoUser={this.props.infoUser}\r\n                    listContact={this.state.listContact}\r\n                    onLoad={this.props.onLoad}\r\n                />\r\n                <NewContact\r\n                    key={this.generateID()}\r\n                    currentForm={this.state.currentForm}\r\n                    infoUser={this.props.infoUser} \r\n                    loadHeader = {this.loadHeader}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftSideBar\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../ava.jpg'\r\nimport { addParticipants } from '../../../../service/UserService';\r\nimport io from 'socket.io-client';\r\n\r\nexport class addNewMember extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            notification: '',\r\n            members: this.props.members\r\n        }\r\n        this.socket=null;\r\n    }\r\n    onSearch = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addMember=(data)=>\r\n    {\r\n        var result=-1;\r\n        var {members}=this.state;\r\n        members.forEach((element,index) => {\r\n            if(element.Username===data)\r\n            {\r\n                result=index;\r\n            }\r\n        });\r\n        if(result===-1)\r\n        {\r\n            this.addParticipants(data);\r\n        }\r\n        else\r\n        {\r\n            alert(\"This user already exists in group\")\r\n        }\r\n    }\r\n    addParticipants=async(data)=>\r\n    {\r\n        var list=[];\r\n        list.push(data)\r\n        await addParticipants(this.generateID(),this.props.id,list)\r\n        .then(res=>\r\n            {\r\n                this.socket = io('localhost:3070');\r\n                this.socket.emit('updateroom', { id: this.props.id, user: this.props.username })\r\n            })\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close = () => {\r\n        this.setState({\r\n            keyword: '',\r\n        })\r\n    }\r\n    render() {\r\n        var { listContact } = this.state;\r\n        if (this.state.keyword) {\r\n            listContact = listContact.filter((list) => {\r\n                return list.Username.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Lastname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Firstname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n\r\n            })\r\n        }\r\n        if(listContact)\r\n        {\r\n            var showResult = listContact.map((contact, index) => {\r\n                return (\r\n                    <div className=\"contact add-new-member\"\r\n                        key={contact.Username}\r\n                        style={{backgroundColor: this.state.currentColor}}\r\n                        onClick={() => this.addMember(contact.Username)}\r\n                        data-dismiss=\"modal\"\r\n                        >\r\n                        <img\r\n                            src={\"data:image/*;base64,\"+contact.Avatar.data}\r\n                            className=\"img-responsive avatar\"\r\n                            onError={this.loadDefaultImage}\r\n                            alt=\"img\" />\r\n                        <div>\r\n                            <span className=\"username-receiver\">{contact.Username}</span>\r\n                            <span className=\"fullname-receiver grey-text\">{contact.Firstname+\" \"+contact.Lastname}</span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div \r\n                    className=\"modal fade\" \r\n                    id=\"ModalAddNewMember\" \r\n                    tabIndex=\"-1\" \r\n                    data-backdrop=\"static\" \r\n                    role=\"dialog\" \r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">Add new member</h4>\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"close\" \r\n                                    data-dismiss=\"modal\" \r\n                                    aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body  \">\r\n                                <div className=\"md-form \">\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"keyword\"\r\n                                        defaultValue={this.state.keyword}\r\n                                        onChange={this.onSearch}\r\n                                        placeholder=\"Search\"\r\n                                        aria-label=\"Search\" />\r\n                                </div>\r\n                                <span className=\"txt-side-bar ml-0\">PEOPLE</span>\r\n                                <div className=\"result-search ml-1 mb-3\">\r\n                                    {showResult}\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"text-center\">{this.state.notification}</span>\r\n                            <div className=\"modal-footer d-flex justify-content-center\">\r\n                                <button\r\n                                    className=\"btn \"\r\n                                    id=\"btnClose\"\r\n                                    onClick={this.close}\r\n                                    data-dismiss=\"modal\"\r\n                                >Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default addNewMember\r\n","import React, { Component } from 'react';\r\nimport './RightSideBar/RightSideBar.css'\r\nimport tempAvatar from '../../../ava.jpg'\r\nimport tempGrAva from '../../../camera.jpg'\r\nimport { checkStatusFr, getInfoRoom, getListContact, getListMembers, updateRoom } from '../../../service/UserService';\r\nimport Resizer from 'react-image-file-resizer'\r\nimport io from 'socket.io-client';\r\nimport AddNewMember from './RightSideBar/addNewMember'\r\nclass RightSideBar extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFriend: \"\",\r\n            members: [],\r\n            avaGr: '',\r\n            listContact:'',\r\n            group: this.props.infoGroup ? this.props.infoGroup : ''\r\n\r\n        }\r\n        this.socket = null;\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.showInfo)\r\n            this.isFriend();\r\n        else {\r\n            this.getListMembers()\r\n            this.getInfoRoom()\r\n            this.getListContact('')\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            if (this.props.showInfo)\r\n                this.isFriend();\r\n            else {\r\n                this.getListMembers()\r\n                this.getInfoRoom();\r\n                this.getListContact('')\r\n            }\r\n\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n      }\r\n    getListContact = async (txtSearch) => {\r\n        await getListContact([this.props.username, txtSearch])\r\n            .then(res =>\r\n                {\r\n                    if(this._isMounted)\r\n                    {\r\n                        this.setState({\r\n                            listContact: res\r\n                        })\r\n                    }\r\n                }\r\n\r\n            ).catch(err => console.log(err));\r\n    }\r\n    getInfoRoom = async () => {\r\n        await getInfoRoom(this.props.infoGroup.ID_Room)\r\n            .then(res => {\r\n                if(this._isMounted)this.setState({ group: res[0] })\r\n            })\r\n    }\r\n    getListMembers = async () => {\r\n        await getListMembers(this.props.infoGroup.ID_Room)\r\n            .then(res => {\r\n                if(this._isMounted)this.setState({ members: res })\r\n            })\r\n    }\r\n    isFriend = async () => {\r\n        var isFr = '';\r\n        await checkStatusFr(this.props.username, this.props.showInfo.Username)\r\n            .then(res => {\r\n                if (res.result === 'Not friend')\r\n                    isFr = false;\r\n                if (res.result === 'Already friend')\r\n                    isFr = true;\r\n                    if(this._isMounted) this.setState({\r\n                    isFriend: isFr\r\n                })\r\n            })\r\n    }\r\n\r\n    loadDefaultImage = (e) => {\r\n        if (this.props.showInfo)\r\n            e.target.src = tempAvatar;\r\n        else\r\n            e.target.src = tempGrAva;\r\n\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 150, 150, 'JPEG', 100, 0,\r\n            uri => {\r\n                resolve(uri);\r\n            },\r\n            'base64'\r\n        );\r\n    })\r\n    onChangeFile = async (e) => {\r\n        var target = e.target.files[0];\r\n        const image = this.resizeFile(target);\r\n        await image.then(res => {\r\n            var r = res.slice(res.indexOf(',') + 1);\r\n            this.setState({\r\n                avaGr: r,\r\n            })\r\n            this.updateRoom();\r\n        });\r\n\r\n    }\r\n    updateRoom = async () => {\r\n        await updateRoom(this.props.infoGroup.ID_Room, this.state.avaGr)\r\n            .then(res => {\r\n                if (res.results === 'Updated') {\r\n                    this.socket = io('https://shrouded-castle-36016.herokuapp.com/');\r\n                    this.socket.emit('updateroom', { id: this.props.infoGroup.ID_Room, user: this.props.username })\r\n                }\r\n            })\r\n    }\r\n\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    render() {\r\n        var { showInfo, infoGroup } = this.props;\r\n        var { members } = this.state\r\n        if (infoGroup !== null && showInfo === null) {\r\n            var memberGroup = members.map((info, index) => {\r\n                return (\r\n                    <div className=\"info-member\" key={info.Username}>\r\n                        <img\r\n                            src={\"data:image/*;base64,\" + info.Avatar.data}\r\n                            className=\"img-responsive avatar\"\r\n                            alt=\"img\"\r\n                            onError={this.loadDefaultImage}\r\n                        />\r\n                        <div>\r\n                            <span className=\"name-receiver\">\r\n                                {info.Firstname === '' && info.Lastname === '' ?\r\n                                    info.Username : info.Firstname + \" \" + info.Lastname}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n        if (showInfo !== null) {\r\n            var { isFriend } = this.state;\r\n            return (\r\n                <div className=\"card show-info\">\r\n                    <h5 className=\"card-header info-color blue-gradient white-text text-center py-4\">\r\n                        <div>\r\n                            <img\r\n                                src={\"data:image/jpg;base64,\" + showInfo.Avatar.data}\r\n                                alt=\"avatar\"\r\n                                className=\"rounded-circle img-responsive modal-title\"\r\n                                onError={this.loadDefaultImage}\r\n                                id=\"avaReceiver\" />\r\n                            <span className=\"name-receiver\"><h5><strong>{showInfo.Firstname === '' && showInfo.Lastname === '' ?\r\n                                showInfo.Username : showInfo.Firstname + \" \" + showInfo.Lastname}</strong></h5></span>\r\n                            {isFriend ? <span className=\"status-activity\">\r\n                                {showInfo.TimeOnline !== null && showInfo.TimeOffline === null ? 'Offline' : 'Online'}</span> : ''}\r\n\r\n                        </div>\r\n\r\n                    </h5>\r\n                    <div className=\"card-body\">\r\n                        <span className=\"txt-side-bar\">INFORMATION</span>\r\n                        <span className=\"divider\"></span>\r\n                        <hr className=\"solid\" />\r\n                        {isFriend ? <table className=\"table table-sm text-left\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-phone-alt \"></i></td>\r\n                                    <td>{showInfo.Phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-mail-bulk\"></i></td>\r\n                                    <td>{showInfo.Email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-birthday-cake \"></i></td>\r\n                                    <td>{showInfo.DateOfBirth}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-home \"></i></td>\r\n                                    <td>{showInfo.Address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-city \"></i></td>\r\n                                    <td>{showInfo.City}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-venus-mars \"></i></td>\r\n                                    <td>{showInfo.Gender === 1 ? 'Female' : 'Male'}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                            : <div className='text-center mt-5'>Just friends could see this information</div>}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        if (infoGroup !== null)\r\n            return (\r\n                <div className=\"card show-info-member-gr\">\r\n                    <h5 className=\"card-header info-color blue-gradient white-text text-center py-4\">\r\n                        <div>\r\n                            <label src={\"data:image/jpg;base64,\" + this.state.group.Avatar.data}\r\n                                alt=\"ava\"\r\n                                onError={this.loadDefaultImage}\r\n                                className=\"rounded-circle img-responsive modal-title avatar-pic-gr mb-0 mt-3\"\r\n                                style={this.state.group.Avatar.data === '' ? { backgroundImage: \"url('\" + tempGrAva + \"')\" }\r\n                                    : { backgroundImage: \"url('data:image/jpg;base64,\" + this.state.group.Avatar.data + \"')\" }}\r\n                            >\r\n                                <input\r\n                                    type=\"file\"\r\n                                    style={{ display: \"none\" }}\r\n                                    onChange={this.onChangeFile}\r\n                                />\r\n                            </label>\r\n                            <span className=\"name-receiver\"><h5><strong>{infoGroup.NameRoom}</strong></h5></span>\r\n                        </div>\r\n                    </h5>\r\n                    <div className=\"card-body show-info-member-gr\">\r\n                        <span className=\"txt-side-bar\">LIST MEMBERS</span>\r\n                        <hr className=\"solid\" />\r\n                        <div \r\n                            className=\"add-new-member\" \r\n                            onClick={this.addNewMember}\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#ModalAddNewMember\"\r\n                        ><i className=\"fas fa-plus\"></i> Add member</div>\r\n                        <AddNewMember \r\n                        key={this.generateID()}\r\n                        listContact={this.state.listContact}\r\n                        members={this.state.members}\r\n                        id={infoGroup.ID_Room}\r\n                        username={this.props.username}\r\n                        />\r\n                        {memberGroup}\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n}\r\nexport default RightSideBar\r\n","import React, { Component } from 'react';\r\n\r\nclass MessageSend extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.type === \"image\") {\r\n            this.setState({id: this.generateID().toString()});\r\n        }\r\n    }\r\n\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + this.randomID();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row message-body\">\r\n                <div className=\"col-sm-12 message-main-sender\">\r\n                    <div className=\"sender\">\r\n                        <div className=\"message-text\">\r\n                            {this.props.type === \"image\"\r\n                                ? \r\n                                <div>\r\n                                    <span style={{ width: \"50%\" }} data-toggle=\"modal\" data-target={`#Modal${this.state.id}`}>\r\n                                        <img src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                    </span>\r\n                                    <div className=\"modal fade\" id={`Modal${this.state.id}`} tabIndex=\"-1\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                                        aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header text-center\">\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n                                                    <img style={{ width: \"100%\" }} src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                                </div>\r\n                                                <div className=\"modal-footer d-flex justify-content-center\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                : this.props.message}\r\n                        </div>\r\n                        <span className=\"message-time pull-right\">\r\n                            {this.props.time}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageSend;","import React, { Component } from 'react';\r\nimport tempAvatar from '../../../../ava.jpg'\r\nclass MessageReceive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.type === \"image\") {\r\n            this.setState({id: this.generateID().toString()});\r\n        }\r\n    }\r\n\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID();\r\n    }\r\n    \r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row message-body\">\r\n                <div className=\"col-sm-12 message-main-receiver\">\r\n                    <div className=\"message-avatar\" style={{ display: \"inline\" }}>\r\n                        <div className=\"heading-avatar-icon\" style={{ display: \"inline\" }}>\r\n                            <img\r\n                                src={\"data:image/jpg;base64,\" + this.props.image}\r\n                                onError={this.loadDefaultImage}\r\n                                alt=\"ava\"\r\n                                id=\"img-mess\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"receiver \">\r\n                        <div className=\"message-text\">\r\n                            {this.props.type === \"image\"\r\n                                ? \r\n                                <div>\r\n                                    <span style={{width:\"60%\"}} data-toggle=\"modal\" data-target={`#Modal${this.state.id}`}>\r\n                                        <img src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                    </span>\r\n                                    <div className=\"modal fade\" id={`Modal${this.state.id}`} tabIndex=\"-1\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                                        aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header text-center\">\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n                                                    <img style={{ width: \"100%\" }} src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                                </div>\r\n                                                <div className=\"modal-footer d-flex justify-content-center\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                : this.props.message}\r\n                        </div>\r\n                        <span className=\"message-time pull-right\">\r\n                            {this.props.time}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageReceive;","import React, { Component, createRef } from 'react';\r\nimport './Conversation/Conversation.css'\r\nimport io from 'socket.io-client';\r\nimport dateFormat from 'dateformat';\r\nimport { getMessages, addMessage, checkStatusFr, sendRequest } from '../../../service/UserService';\r\nimport MessageSend from './Conversation/MessageSend';\r\nimport MessageReceive from './Conversation/MessageReceive';\r\nimport tempAvatar from '../../../ava.jpg';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\nclass ConvNonGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            isFriend: \"\",\r\n            text: \"\",\r\n            type: \"\",\r\n            id: \"\"\r\n        };\r\n        this.socket = null;\r\n        this.txtMessage = createRef();\r\n        this.inputFile = createRef();\r\n    }\r\n    focusTxtMess = () => {\r\n        this.txtMessage.current.focus();\r\n    }\r\n    getChat = () => {\r\n        getMessages(this.props.id)\r\n            .then(res => {\r\n                var chats = [];\r\n                res.forEach((mess, index) => {\r\n                    if (mess.ID_Sender === this.props.showInfo.Username) {\r\n                        var data = [false, mess.Message, mess.TimeSend];\r\n                        chats.push(data);\r\n                    } else {\r\n                        data = [true, mess.Message, mess.TimeSend];\r\n                        chats.push(data);\r\n                    }\r\n                });\r\n                this.setState({ messages: chats });\r\n            }\r\n            ).catch(err => console.log(err));\r\n    }\r\n    isFriend = async () => {\r\n        var isFr = '';\r\n        await checkStatusFr(this.props.username, this.props.showInfo.Username)\r\n            .then(res => {\r\n                if (res.result === 'Not friend')\r\n                    isFr = false;\r\n                if (res.result === 'Already friend')\r\n                    isFr = true;\r\n                this.setState({\r\n                    isFriend: isFr\r\n                })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.socket = io('https://shrouded-castle-36016.herokuapp.com/');\r\n        this.socket.emit('joinRoom', this.props.id);\r\n        this.socket.on('newMessage', (response) => { this.newMessage(response) }); //lắng nghe event 'newMessage' và gọi hàm newMessage khi có event\r\n        this.getChat();\r\n        this.isFriend();\r\n        // this.setState({id: this.state.id});\r\n    }\r\n    componentWillUnmount() {\r\n        this.socket.disconnect();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            this.isFriend();\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps && this.props !== null)\r\n        {\r\n            this.isFriend()\r\n        }\r\n        this.messagesEnd.scrollIntoView({ block: 'end', behavior: 'smooth' });\r\n    }\r\n    newMessage(m) {\r\n        var messages = this.state.messages;\r\n        var data = [false, m[0], dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), m[1]];\r\n        messages.push(data);\r\n        this.setState({\r\n            messages: messages\r\n        });\r\n    }\r\n    onSendMessage = () => {\r\n        var { messages } = this.state;\r\n        if (this.state.type === \"image\") {\r\n            var data = [true, this.state.text, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'image'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.state.text, 'image']);\r\n            this.txtMessage.current.value = \"\";\r\n            this.setState({\r\n                messages: messages,\r\n                text: \"\",\r\n                type: \"\"\r\n            });\r\n        }\r\n\r\n        if (this.txtMessage.current.value !== \"\") {\r\n            data = [true, this.txtMessage.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'text'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.txtMessage.current.value]);\r\n            this.txtMessage.current.value = \"\";\r\n            addMessage([this.props.username, this.props.id, data[1], data[2]]);\r\n            this.setState({\r\n                messages: messages\r\n            });\r\n\r\n        }\r\n        else return;\r\n    }\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.onSendMessage();\r\n        }\r\n    }\r\n    closeConvTab = () => {\r\n        this.props.closeConvTab(this.props.showInfo)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    addEmoji = e => {\r\n        let emoji = e.native;\r\n        this.txtMessage.current.value += emoji;\r\n    };\r\n    onUnfriend = () => {\r\n        this.socket.emit('unfriend', { idroom: this.props.id, user: this.props.username, friend: this.props.showInfo.Username });\r\n    }\r\n    onAddfriend = async() => {\r\n        await this.sendRequest();\r\n    }\r\n    sendRequest = async () => {\r\n        await sendRequest(this.props.id, this.props.username, this.props.showInfo.Username, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"))\r\n            .then(res => {\r\n                if (res.result === \"Sent friend request\") {\r\n                    this.setState({\r\n                        isFriend: \"\",\r\n                        id: `${this.props.username}-${this.props.showInfo.Username}`\r\n                    })\r\n                }\r\n                \r\n                if (res.idroom_temp) {\r\n                    this.props.loadHeader(this.props.showInfo.Username);\r\n                    this.props.idroom_temp(res.idroom_temp);\r\n                }\r\n            })\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 250, 250, 'JPEG', 100, 0,\r\n        uri => {\r\n            resolve(uri);},\r\n            'base64'\r\n        );\r\n    })\r\n    _onChange = (e) => {\r\n        var target = e.target.files[0];\r\n        const image =  this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',')+1);\r\n            this.setState({text: r, type: 'image'});\r\n            this.txtMessage.current.value = \"(image)\";\r\n        });\r\n    }\r\n    onChangeMessage = (e) => {\r\n        var target = e.target;\r\n        var value = target.value;\r\n        this.setState({\r\n            text: value,\r\n            type: 'text'\r\n        });\r\n    }\r\n    render() {\r\n        var { messages, isFriend } = this.state;\r\n        var { showInfo } = this.props;\r\n\r\n        var listMessage = messages.map((message, index) => {\r\n            if (message[0])\r\n                return <MessageSend\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]} />\r\n            else\r\n                return <MessageReceive\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]}\r\n                    image={showInfo.Avatar.data}\r\n                />\r\n        });\r\n\r\n        return (\r\n            <div className=\"conversation\">\r\n                <div className=\"row heading no-gutters\">\r\n                    <div className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 \">\r\n                        <div className=\"heading-avatar\">\r\n                            <div className=\"heading-avatar-icon\">\r\n                                <img\r\n                                    src={\"data:image/jpg;base64,\" + showInfo.Avatar.data}\r\n                                    alt=\"ava\"\r\n                                    id=\"img-header\"\r\n                                    onError={this.loadDefaultImage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 \">\r\n                        <div className=\"heading-name\">\r\n                            <a className=\"heading-name-meta\" href=\"/#\">{showInfo.Firstname === '' ? showInfo.Username : showInfo.Firstname}</a>\r\n                            <span className=\"heading-online\">\r\n                                {(showInfo.Time_Online !== null && showInfo.Time_Offline === null) ? 'Online' : 'Offline'}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 \">\r\n                        <a\r\n                            className=\"heading-dots dropdown mt-2 ml-4 w-75\"\r\n                            type=\"button\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                            href=\"/#\">\r\n                            <i className=\"fa fa-ellipsis-v fa-2x \" aria-hidden=\"true\"></i></a>\r\n                        <div className=\"heading-dots dropdown-menu dropdown-menu-right\">\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={this.closeConvTab}\r\n                            >Close</a>\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={isFriend === true ? this.onUnfriend : (isFriend === '' ? e => e.preventDefault() : this.onAddfriend)}\r\n                            >{isFriend === true ? 'Unfriend' : (isFriend === '' ? 'Not accept' : 'Add friend')}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row message\" id=\"conversation\">\r\n                    <div className=\"row message-previous\">\r\n                        <div className=\"col-sm-12 previous\">\r\n                            <a id=\"ankitjain28\" name=\"20\" href=\"/#\">\r\n                                Show Previous Message!\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    {listMessage}\r\n                    <div\r\n                        ref={el => {\r\n                            this.messagesEnd = el;\r\n                        }}\r\n                        style={{ float: \"left\", clear: \"both\" }}\r\n                    />\r\n                </div>\r\n                <div className=\"list-emoji\">\r\n                    <span id=\"emoji\"\r\n                        className=\"width-300 dropdown-menu dropdown-menu-lg-left dropdown-secondary\">\r\n                        <Picker onSelect={this.addEmoji} />\r\n                    </span>\r\n                </div>\r\n                <div className=\"row reply\">\r\n                    <div className=\"col-sm-1 col-xs-1 reply-emojis\">\r\n                        <i className=\"fas fa-smile-beam fa-2x\" data-toggle=\"collapse\" data-target=\"#emoji\"></i>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-recording\">\r\n                        <form>\r\n                            <label htmlFor=\"file-upload\">\r\n                                <i className=\"fas fa-folder-open fa-2x\"></i>\r\n                            </label>\r\n                            <input \r\n                                id=\"file-upload\" accept=\"image/*\"\r\n                                type=\"file\"\r\n                                ref={this.inputFile}\r\n                                style={{display:'none'}} \r\n                                onChange = {this._onChange}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-sm-9 col-xs-9 reply-main\">\r\n                        <textarea\r\n                            className=\"txtConv form-control\"\r\n                            rows=\"1\" id=\"comment\" placeholder=\"Aa\" autoFocus\r\n                            ref={this.txtMessage}\r\n                            onClick={this.focusTxtMess}\r\n                            onKeyDown={this.onEnterPress}\r\n                            onChange = {this.onChangeMessage}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-send\">\r\n                        <i\r\n                            className=\"fas fa-paper-plane fa-2x\" aria-hidden=\"true\"\r\n                            onClick={this.onSendMessage}\r\n                        ></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConvNonGroup;\r\n","import React, { Component } from 'react';\r\nimport './Conversation/Conversation.css'\r\nimport tempAvatar from '../../../ava.jpg'\r\nimport io from 'socket.io-client';\r\nimport dateFormat from 'dateformat';\r\nimport { getMessages, addMessage, getInfoMemGroup, getInfoRoom } from '../../../service/UserService';\r\nimport MessageSend from './Conversation/MessageSend';\r\nimport MessageReceive from './Conversation/MessageReceive';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\nclass ConvGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            members: [],\r\n            group: this.props.infoGroup,\r\n            text: \"\",\r\n            type: \"\"\r\n        };\r\n        this.socket = null;\r\n        this.txtMessage = React.createRef();\r\n        this.inputFile = React.createRef();\r\n    }\r\n    getChat = () => {\r\n        getMessages(this.props.id)\r\n            .then(res => {\r\n                var chats = [];\r\n                res.forEach((mess, index) => {\r\n                    var data = [mess.ID_Sender, mess.Message, mess.TimeSend];\r\n                    chats.push(data);\r\n                });\r\n                this.setState({ messages: chats });\r\n            }\r\n            ).catch(err => console.log(err));\r\n    }\r\n\r\n    getMembers = () => {\r\n        getInfoMemGroup(this.props.id)\r\n            .then(res => {\r\n                var mems = [];\r\n                res.forEach((mem, index) => {\r\n                    mems.push(mem);\r\n                });\r\n                this.setState({ members: mems });\r\n            }\r\n            ).catch(err => console.log(err));\r\n    }\r\n    getInfoRoom = async () => {\r\n        await getInfoRoom(this.props.infoGroup.ID_Room)\r\n            .then(res => {\r\n                this.setState({ group: res[0] })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.socket = io('https://shrouded-castle-36016.herokuapp.com/');\r\n        this.socket.emit('joinRoom', this.props.id);\r\n        this.socket.on('newMessage', (response) => { this.newMessage(response) });\r\n        this.getChat();\r\n        this.getMembers();\r\n        this.getInfoRoom();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.messagesEnd.scrollIntoView({ block: 'end', behavior: 'smooth' });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            this.getMembers();\r\n            this.getInfoRoom();\r\n        }\r\n    }\r\n    newMessage(m) {\r\n        var messages = this.state.messages;\r\n        var data = [m[1], m[0], dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), m[2]];\r\n        messages.push(data);\r\n        this.setState({\r\n            messages: messages\r\n        });\r\n    }\r\n\r\n    onSendMessage = () => {\r\n        var { messages } = this.state;\r\n        if (this.state.type === \"image\") {\r\n            var data = [this.props.username, this.state.text, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'image'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.state.text, this.props.username, 'image']);\r\n            this.txtMessage.current.value = \"\";\r\n            this.setState({\r\n                messages: messages,\r\n                text: \"\",\r\n                type: \"\"\r\n            });\r\n        }\r\n\r\n        if (this.txtMessage.current.value !== \"\") {\r\n            data = [this.props.username, this.txtMessage.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'text'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.txtMessage.current.value, this.props.username]);\r\n            this.txtMessage.current.value = \"\";\r\n            addMessage([this.props.username, this.props.id, data[1], data[2]]);\r\n            this.setState({\r\n                messages: messages\r\n            });\r\n        }\r\n        else return;\r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.onSendMessage();\r\n        }\r\n    }\r\n\r\n    findUsername = (username) => {\r\n        if (username === this.props.username)\r\n            return -1;\r\n        else {\r\n            var { members } = this.state;\r\n            var index = -2;\r\n            members.forEach((member, i) => {\r\n                if (member.Username === username) {\r\n                    index = i;\r\n                }\r\n            })\r\n            return index;\r\n        }\r\n    }\r\n    closeConvTab = () => {\r\n        this.props.closeConvTab(this.props.showInfo)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    addEmoji = e => {\r\n        let emoji = e.native;\r\n        this.txtMessage.current.value += emoji;\r\n    };\r\n    leaveGroup = () => {\r\n        this.socket.emit('leavegroup', { idroom: this.props.id, user: this.props.username, members: this.state.members });\r\n        this.props.closeConvTab(this.props.showInfo)\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 250, 250, 'JPEG', 100, 0,\r\n        uri => {\r\n            resolve(uri);},\r\n            'base64'\r\n        );\r\n    })\r\n    _onChange = (e) => {\r\n        var target = e.target.files[0];\r\n        const image =  this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',')+1);\r\n            this.setState({text: r, type: 'image'});\r\n            this.txtMessage.current.value = \"(image)\";\r\n        });\r\n    }\r\n    onChangeMessage = (e) => {\r\n        var target = e.target;\r\n        var value = target.value;\r\n        this.setState({\r\n            text: value,\r\n            type: 'text'\r\n        });\r\n    }\r\n    render() {\r\n        var { messages, members } = this.state;\r\n        var listMessage = messages.map((message, index) => {\r\n            var i = this.findUsername(message[0]);\r\n            if (i === -1)\r\n                return <MessageSend\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]} />\r\n            else\r\n                return <MessageReceive\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]}\r\n                    image={members[i] ? members[i].Avatar.data : ''}\r\n                />\r\n        });\r\n        return (\r\n            <div className=\"conversation\">\r\n                <div className=\"row heading no-gutters\">\r\n                    <div className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 \">\r\n                        <div className=\"heading-avatar\">\r\n                            <div className=\"heading-avatar-icon\">\r\n                                <img\r\n                                    src={\"data:image/jpg;base64,\" + this.state.group.Avatar.data}\r\n                                    alt=\"ava\"\r\n                                    id=\"img-header\"\r\n                                    onError={this.loadDefaultImage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 \">\r\n                        <div className=\"heading-name\">\r\n                            <a className=\"heading-name-meta\" href=\"/#\">{this.state.group.NameRoom}</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 \">\r\n                        <a\r\n                            className=\"heading-dots dropdown mt-2 ml-4 w-75\"\r\n                            type=\"button\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                            href=\"/#\">\r\n                            <i className=\"fa fa-ellipsis-v fa-2x \" aria-hidden=\"true\"></i></a>\r\n                        <div className=\"heading-dots dropdown-menu dropdown-menu-right\">\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={this.closeConvTab}\r\n                            >Close</a>\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={this.leaveGroup}\r\n                            >Leave</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row message\" id=\"conversation\">\r\n                    <div className=\"row message-previous\">\r\n                        <div className=\"col-sm-12 previous\">\r\n                            <a id=\"ankitjain28\" name=\"20\" href=\"/#\">\r\n                                Show Previous Message!\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    {listMessage}\r\n                    <div\r\n                        ref={el => {\r\n                            this.messagesEnd = el;\r\n                        }}\r\n                        style={{ float: \"left\", clear: \"both\" }}\r\n                    />\r\n                </div>\r\n                <div className=\"list-emoji\">\r\n                    <span id=\"emoji\"\r\n                        className=\"width-300 dropdown-menu dropdown-menu-lg-left dropdown-secondary\">\r\n                        <Picker onSelect={this.addEmoji} />\r\n                    </span>\r\n                </div>\r\n                <div className=\"row reply\">\r\n                    <div className=\"col-sm-1 col-xs-1 reply-emojis\">\r\n                        <i className=\"fas fa-smile-beam fa-2x\" data-toggle=\"collapse\" data-target=\"#emoji\"></i>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-recording\">\r\n                        <form>\r\n                            <label htmlFor=\"file-upload\">\r\n                                <i className=\"fas fa-folder-open fa-2x\"></i>\r\n                            </label>\r\n                            <input \r\n                                id=\"file-upload\" \r\n                                type=\"file\"\r\n                                ref={this.inputFile}\r\n                                style={{display:'none'}} \r\n                                onChange = {this._onChange}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-sm-9 col-xs-9 reply-main\">\r\n                        <textarea\r\n                            className=\"txtConv form-control\"\r\n                            rows=\"1\" id=\"comment\" placeholder=\"Aa\" autoFocus\r\n                            ref={this.txtMessage}\r\n                            onKeyDown={this.onEnterPress}\r\n                            onChange={this.onChangeMessage}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-send\">\r\n                        <i\r\n                            className=\"fas fa-paper-plane fa-2x\" aria-hidden=\"true\"\r\n                            onClick={this.onSendMessage}\r\n                        ></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConvGroup;\r\n","import React, { Component } from 'react'\r\nimport './Content.css'\r\nimport LeftSideBar from './Components/LeftSideBar.js'\r\nimport RightSideBar from './Components/RightSideBar.js'\r\nimport ConvNonGroup from './Components/ConvNonGroup.js'\r\nimport ConvGroup from './Components/ConvGroup.js'\r\nimport io from 'socket.io-client';\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showInfo: null,\r\n            infoGroup: null,\r\n            onReload: true,\r\n        }\r\n        this.socket = null;\r\n    }\r\n    componentDidMount() {\r\n        this.socket = io('https://shrouded-castle-36016.herokuapp.com/');\r\n        this.socket.emit('joinUser', this.props.username);\r\n        this.socket.on('onShowNewMessage', (response) => { this.setState({ onReload: !this.state.onReload }) });\r\n        this.socket.on('to-friend-reloadHeader', (response) => this.reloadHeader());\r\n        this.socket.on('unfriend', (res) => \r\n        {\r\n            var {showInfo} = this.state;\r\n            if(showInfo!==null)\r\n            {\r\n                if(showInfo.ID_Room===res.idroom)\r\n                {\r\n                    showInfo.ID_Room = res.idroomTemp;\r\n                    this.setState({showInfo: showInfo});\r\n                }\r\n            }\r\n            this.changeOnReload()\r\n        });\r\n        this.socket.on('userleavedgr', (res) => { this.changeOnReload() });\r\n        this.socket.on('removegroup', (res) => {\r\n            if (this.state.infoGroup !== null) {\r\n                if (this.state.infoGroup.ID_Room === res.idroom)\r\n                    this.closeConvTab();\r\n            }\r\n            this.changeOnReload()\r\n        });\r\n        this.socket.on('addgroup', (res) => { this.changeOnReload() })\r\n        this.socket.on('updateroom', (res) => { this.changeOnReload() })\r\n\r\n    }\r\n    changeOnReload = async () => {\r\n        await this.setState({\r\n            onReload: !this.state.onReload\r\n        })\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.onReload) {\r\n            this.loadHeader(nextProps.onReload);\r\n            if (nextProps.onReload !== \"\" && this.state.showInfo!==null) {\r\n                var {showInfo} = this.state;\r\n                showInfo.ID_Room = `${nextProps.onReload}-${this.props.username}`;\r\n                this.setState({showInfo: showInfo});\r\n            }\r\n            this.setState({\r\n                onReload: !this.state.onReload\r\n            })\r\n        }\r\n    }\r\n    reloadHeader = () => {\r\n        this.props.reloadHeader();\r\n    }\r\n    showInfo = (data) => {\r\n        this.setState({\r\n            showInfo: data,\r\n            infoGroup: null,\r\n        })\r\n    }\r\n    infoGroup = (data) => {\r\n        this.setState({\r\n            infoGroup: data,\r\n            showInfo: null\r\n        })\r\n    }\r\n    closeConvTab = () => {\r\n        this.setState({\r\n            showInfo: null,\r\n            infoGroup: null\r\n        })\r\n    }\r\n    idroom_temp = (data) => {\r\n        var {showInfo} = this.state;\r\n        showInfo.ID_Room = data;\r\n        this.setState({showInfo: showInfo});\r\n        this.changeOnReload();\r\n    }\r\n    loadHeader = (data) => {\r\n        this.socket.emit('reloadHeader', data);\r\n    }\r\n    onLoad = () => {\r\n        this.changeOnReload();\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    render() {\r\n        var { showInfo, infoGroup, onReload } = this.state;\r\n        var welcome=<div className=\"welcome\">\r\n            <div className=\"text-center mt-5\"><h1>Welcome, {this.props.username}</h1></div>\r\n            <div className=\"text-center mt-2\" style={{color:\"#1a237e\"}}><h3>Let's chat together</h3></div>\r\n            <div className=\"img-welcome text-center mt-5\" ></div>\r\n            <div className=\"text-center mt-5 grey-text\"><span>Search for someone to start chatting with or go to Contacts to see who avaiable</span></div>\r\n            </div>\r\n        var altEmptyRightBar=<div>\r\n            <div className=\"alt-empty-right-bar\"></div>\r\n            <div className=\"alt-empty-right-bar-text\">\r\n            <span>Communicate with your friends </span>\r\n            <br/><br/>\r\n            <span >Everywhere</span>\r\n            <br/><br/>\r\n            <span>Everytime</span>\r\n            <br/>\r\n            </div>\r\n\r\n        </div>    \r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                        <LeftSideBar\r\n                            showInfo={this.showInfo}\r\n                            infoGroup={this.infoGroup}\r\n                            username={this.props.username}\r\n                            infoUser={this.props.infoUser}\r\n                            onReload={onReload}\r\n                            loadHeader={this.loadHeader}\r\n                            onLoad={this.onLoad}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        <div className=\"middle-bar\">\r\n                            {(showInfo === null && infoGroup === null) ? welcome : (infoGroup !== null ?\r\n                                <ConvGroup\r\n                                    key={this.state.infoGroup.ID_Room}\r\n                                    infoGroup={infoGroup}\r\n                                    username={this.props.username}\r\n                                    onReload={onReload}\r\n                                    id={infoGroup.ID_Room}\r\n                                    closeConvTab={this.closeConvTab}\r\n                                /> :\r\n                                <ConvNonGroup\r\n                                    key={this.state.showInfo.ID_Room}\r\n                                    showInfo={showInfo}\r\n                                    id={this.state.showInfo.ID_Room}\r\n                                    username={this.props.username}\r\n                                    closeConvTab={this.closeConvTab}\r\n                                    onReload={onReload}\r\n                                    idroom_temp={this.idroom_temp}\r\n                                    isFriend={this.state.isFriend}\r\n                                    loadHeader={this.loadHeader}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                        <div className=\"right-bar \">\r\n                            {(showInfo === null && infoGroup === null) ? altEmptyRightBar :\r\n                                <RightSideBar\r\n                                    key={this.generateID()}\r\n                                    infoGroup={infoGroup}\r\n                                    username={this.props.username}\r\n                                    onReload={onReload}\r\n                                    showInfo={showInfo}\r\n                                />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content\r\n","import React, { Component } from 'react';\r\nimport './Footer.css';\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n        <div >\r\n        <footer className=\"page-footer mdb-color black\">\r\n          <div className=\"footer-copyright text-right py-0.5 mr-5\">© 2020 Copyright:\r\n            <a href=\"/#\"> LetsChat.com</a>\r\n            <a className=\"TermOfUser\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalTermOfUser\">  Term of user</a>\r\n            <a className=\"Privacy\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalPrivacy\">  Privacy and cookie policy</a>\r\n          </div>\r\n        </footer>\r\n        <div className=\"modal fade\" id=\"modalTermOfUser\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"modalTermOfUser\"\r\n          aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header blue-gradient\">\r\n                <h5 className=\"modal-title \" id=\"modalTermOfUser\">Term of user</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Microsoft collects data from you, through our interactions with you and through our products. You provide some of this data directly, and we get some of it by collecting data about your interactions, use, and experiences with our products. The data we collect depends on the context of your interactions with Microsoft and the choices you make, including your privacy settings and the products and features you use. We also obtain data about you from third parties.\r\n                If you represent an organization, such as a business or school, that utilizes Enterprise and Developer Products from Microsoft, please see the Enterprise and developer products section of this privacy statement to learn how we process your data. If you are an end user of a Microsoft product or a Microsoft account provided by your organization, please see the Products provided by your organization and the Microsoft account sections for more information.\r\n                You have choices when it comes to the technology you use and the data you share. When we ask you to provide personal data, you can decline. Many of our products require some personal data to provide you with a service. If you choose not to provide data required to provide you with a product or feature, you cannot use that product or feature. Likewise, where we need to collect personal data by law or to enter into or carry out a contract with you, and you do not provide the data, we will not be able to enter into the contract; or if this relates to an existing product you’re using, we may have to suspend or cancel it. We will notify you if this is the case at the time. Where providing the data is optional, and you choose not to share personal data, features like personalization that use such data will not work for you.\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary morpheus-den-gradient\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal fade\" id=\"modalPrivacy\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\"\r\n          aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header blue-gradient\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Privacy and cookie policy</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Your Privacy. Your privacy is important to us. Please read the Microsoft Privacy Statement (https://go.microsoft.com/fwlink/?LinkId=521839) (the \"Privacy Statement\") as it describes the types of data we collect from you and your devices (\"Data\"), how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how Microsoft uses your content, which is your communications with others; postings submitted by you to Microsoft via the Services; and the files, photos, documents, audio, digital works, livestreams and videos that you upload, store, broadcast or share through the Services (\"Your Content\"). Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Microsoft’s collection, use and disclosure of Your Content and Data as described in the Privacy Statement. In some cases, we will provide separate notice and request your consent as referenced in the Privacy Statement.\r\n                </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary morpheus-den-gradient\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport {getNotifications, acceptFriendRequest, readNotification} from '../../../service/UserService';\r\n\r\nclass Notification extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notifications: [],\r\n            isOpened: true\r\n        };\r\n        this.socket = null;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNotifications();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            this.getNotifications();\r\n        }\r\n    }\r\n\r\n    getNotifications = async() => {\r\n        await getNotifications(this.props.username)\r\n            .then(res => \r\n                this.setState({\r\n                    notifications: res,\r\n                    isOpened: !this.state.isOpened\r\n                })\r\n            ).catch(err => console.log(err));\r\n    }\r\n\r\n    onAccept = (sender, check) => {\r\n        acceptFriendRequest([sender, this.props.username, check]);\r\n        if (check === 0) this.props.onReload(sender);\r\n        this.getNotifications();\r\n    }\r\n\r\n    onRead = () => {\r\n        var {isOpened} = this.state;\r\n        if (isOpened) {\r\n            readNotification(this.props.username);\r\n            this.getNotifications();\r\n        }\r\n        else this.setState({isOpened: true});\r\n        \r\n    }\r\n\r\n    render() {\r\n        var {notifications} = this.state;\r\n        var listNotis = notifications.map((noti, index) => {\r\n            if (noti.IsFriend === 0) {\r\n                return  <div key = {index}>\r\n                            <a className=\"dropdown-item waves-effect waves-light\" href=\"/#\">\r\n                                <div className=\"bold-text\">{noti.Firstname} {noti.Lastname}</div> has accepted your friend request.\r\n                            </a>\r\n                        </div>\r\n            } \r\n            else {\r\n                return  <div key = {index}>\r\n                            <a className=\"dropdown-item waves-effect waves-light\" href=\"/#\">\r\n                                <div className=\"bold-text\">{noti.Firstname} {noti.Lastname}</div> send you a friend request.\r\n                                <div style={{height:\"30px\"}}>\r\n                                    <span onClick = {() => this.onAccept(noti.ID_Sender, 0)} className=\"btn-noti btn btn-outline-primary\">Accept</span>\r\n                                    <span onClick = {() => this.onAccept(noti.ID_Sender, 1)} className=\"btn-noti btn btn-primary waves-effect morpheus-den-gradient\">Deny</span>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n            }\r\n        });\r\n        \r\n        return (\r\n            <div>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item avatar dropdown\">\r\n                        <a  \r\n                            className=\"nav-link dropdown-toggle\" \r\n                            onClick={this.onRead}\r\n                            id=\"notification-drop\" \r\n                            data-toggle=\"collapse\" \r\n                            href=\"#listNotis\" \r\n                            aria-expanded=\"true\">\r\n                            <span className=\"badge badge-danger ml-2\">{notifications.length}</span>\r\n                            <i className=\"fas fa-bell bell\"></i>\r\n                        </a>\r\n                        <div \r\n                            id=\"listNotis\" \r\n                            className=\"width-300 dropdown-menu dropdown-menu-lg-right dropdown-secondary\" \r\n                            aria-labelledby=\"notification-drop\">\r\n                            {listNotis}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport './Header.css'\r\nimport Notification from './Components/Notification'\r\nimport Account from './Components/Account'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infoUser: null,\r\n            reload: true\r\n        }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps) {\r\n            this.setState({reload: !this.state.reload});\r\n        }\r\n    }\r\n\r\n    onReload = (data) => {\r\n        this.props.onReload(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"mb-1 navbar navbar-expand-sm navbar-bright lighten-1\">\r\n                    <a className=\"navbar-brand \" href=\"window.location.reload()\" ><b className=\"nameApp\">LetsChat</b></a>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-555\">\r\n\r\n                        {/* Right Header */}\r\n                        <ul className=\"navbar-nav ml-auto nav-flex-icons \">\r\n                            {/* Notification */}\r\n                            <li className=\"nav-item notification mr-3 \">\r\n                                <Notification \r\n                                username = {this.props.username} \r\n                                reload={this.state.reload} \r\n                                onReload = {this.onReload}\r\n                                />\r\n                            </li>\r\n                            {/* Account */}\r\n                            <li className=\"nav-item avatar dropdown\">\r\n                                <Account\r\n                                    user={this.props.user}\r\n                                    userFirstname={this.props.userFirstname}\r\n                                    username={this.props.username}\r\n                                    infoUser={this.props.infoUser}\r\n                                />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Content from '../Components/Content/Content';\nimport Footer from '../Components/Footer/Footer';\nimport Header from '../Components/Header/Header';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      reloadHeader: true,\n      onReload: '',\n    }\n  }\n\n  reloadHeader= () => {\n    this.setState({ reloadHeader: !this.state.reloadHeader });\n  }\n\n  onReload = (data) => {\n    this.setState({ onReload: data });\n  }\n\n  render() {\n    var { data, reloadHeader, onReload } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <header className=\"Header\">\n          <Header\n            key={this.props.user['Username']}\n            user={this.props.user['Avatar']}\n            userFirstname={this.props.user['Firstname']}\n            username={this.props.user['Username']}\n            infoUser={this.props.user}\n            reloadHeader={reloadHeader}\n            onReload={this.onReload}\n          />\n        </header>\n        <div className=\"content\">\n          <Content\n            data={data}\n            infoUser={this.props.user}\n            username={this.props.user['Username']}\n            reloadHeader={this.reloadHeader}\n            onReload={onReload}\n          />\n        </div>\n        <div className=\"Footer\">\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport { checkRegister } from '../service/UserService';\r\nimport ava from '../ava.jpg';\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            pass: \"\",\r\n            confirmPass: \"\",\r\n            phone: \"\",\r\n            notification:\"\",\r\n            avatar: {ava}\r\n        }\r\n    }\r\n    onRegister = (event) => {\r\n        event.preventDefault();\r\n        if(this.checkInput()===true)\r\n        {\r\n            this.checkRegister(this.state);\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                notification: \"Confirm password doesn't match\"\r\n            })\r\n        }\r\n    }\r\n    checkInput=()=>\r\n    {\r\n        var {pass,confirmPass}=this.state;\r\n        if(pass!==confirmPass) return false;\r\n        else return true;\r\n    }\r\n    checkRegister=(data)=>\r\n    {\r\n         checkRegister(data)\r\n        .then(res=>\r\n            {\r\n                this.setState({\r\n                    notification : res.result\r\n                })\r\n            }).catch(err => console.log(err));\r\n    }\r\n    onHandleChange=(event)=>\r\n    {\r\n\t\tvar target=event.target;\r\n\t\tvar names=target.name;\r\n\t\tvar values=target.value;\r\n\t\tthis.setState({\r\n\t\t\t[names]: values\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onRegister}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    required=\"required\"\r\n                    value={this.state.username}\r\n                    onChange={this.onHandleChange} />\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Phone\"\r\n                    required=\"required\"\r\n                    pattern=\"[0]{1}[0-9]{9}\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onHandleChange} />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"pass\"\r\n                    placeholder=\"Password\"\r\n                    required=\"required\"\r\n                    value={this.state.pass}\r\n                    onChange={this.onHandleChange} />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"confirmPass\"\r\n                    placeholder=\"Confirm Password\"\r\n                    required=\"required\"\r\n                    value={this.state.confirmPass}\r\n                    onChange={this.onHandleChange} />\r\n                <span div=\"register-notification\" style={{color:\"red\"}}>{this.state.notification}</span>\r\n                <input type=\"submit\" value=\"Register\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './Login.css';\r\nimport App from '../Home/App.js';\r\nimport React, { Component, createRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {login} from '../service/UserService';\r\nimport Register from '../Register/Register.js';\r\nimport dateFormat from 'dateformat';\r\n\r\nclass Login extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user : null,\r\n            incorrectLogin : true\r\n        };\r\n        this.userInput=createRef();\r\n        this.passInput=createRef();\r\n    }\r\n    focusUser=()=>\r\n    {\r\n        this.userInput.current.focus();\r\n    }\r\n    focusPass=()=>\r\n    {\r\n        this.passInput.current.focus();\r\n    }\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('user')) {\r\n            var user = JSON.parse(localStorage.getItem('user'));\r\n            this.userInput.current.value = user[0];\r\n            this.passInput.current.value = user[1];\r\n            this.onLogIn(\"logged-in\");\r\n        }\r\n    }\r\n    onLogIn = (text) => {\r\n        if (text && text===\"logged-in\") {\r\n            const data = [this.userInput.current.value, this.passInput.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'logged-in'];\r\n            login(data).then(result => {\r\n                if  (result !== null) {\r\n                    result.Password = \"\";\r\n                    this.setState({user: result});\r\n                    ReactDOM.render(\r\n                        <React.StrictMode>\r\n                        <App\r\n                            user = {this.state.user}\r\n                        />\r\n                        </React.StrictMode>,\r\n                        document.getElementById('root')\r\n                    );\r\n                }\r\n                else this.setState({incorrectLogin: false});\r\n            });\r\n        }\r\n        else {\r\n            const data = [this.userInput.current.value, this.passInput.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'login'];\r\n            login(data).then(result => {\r\n                if  (result !== null) {\r\n                    localStorage.setItem('user', JSON.stringify([data[0], result.Password]));\r\n                    result.Password = \"\";\r\n                    this.setState({user: result});\r\n                    ReactDOM.render(\r\n                        <React.StrictMode>\r\n                        <App\r\n                            user = {this.state.user}\r\n                        />\r\n                        </React.StrictMode>,\r\n                        document.getElementById('root')\r\n                    );\r\n                }\r\n                else this.setState({incorrectLogin: false});\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter')\r\n        {\r\n            e.preventDefault();\r\n            this.onLogIn();\r\n        }\r\n    }\r\n\r\n    onFocus = () => {\r\n        this.setState({incorrectLogin: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop:\"300px\"}} className=\"login-reg-panel morpheus-den-gradient\">\r\n                <div className=\"login-info-box\">\r\n                    <h2>Have an account?</h2>\r\n                    <label id=\"label-register\" htmlFor=\"log-reg-show\">Login</label>\r\n                    <input type=\"radio\" name=\"active-log-panel\" id=\"log-reg-show\" />\r\n                </div>\r\n                            \r\n                <div className=\"register-info-box\">\r\n                    <h2>Don't have an account?</h2>\r\n                    <label id=\"label-login\" htmlFor=\"log-login-show\">Register</label>\r\n                    <input type=\"radio\" name=\"active-log-panel\" id=\"log-login-show\"/>\r\n                </div>\r\n                            \r\n                <div className=\"white-panel\">\r\n                    <div className=\"login-show\">\r\n                        <h2>LOGIN</h2>\r\n                        <input \r\n                            type=\"text\" \r\n                            ref={this.userInput} \r\n                            onClick={this.focusUser}\r\n                            placeholder=\"Username\" \r\n                        />\r\n                        <input \r\n                            type=\"password\" \r\n                            ref={this.passInput}\r\n                            onClick={this.focusPass} \r\n                            placeholder=\"Password\" \r\n                            onKeyDown={this.onEnterPress} \r\n                        />\r\n                        <input type=\"button\" value=\"Login\" onClick={() => this.onLogIn('login')}/>\r\n                        <a href=\"/#\">Forgot password?</a>\r\n                        <p className={this.state.incorrectLogin?\"incorrect-login hidden-p\":\"incorrect-login\"}>Username or Password is incorrect</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"register-show\">\r\n                        <h2>REGISTER</h2>\r\n                        <Register/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\r\nimport Feedback from './Account/Feedback'\r\nimport UpdateProfile from './Account/UpdateProfile'\r\nimport ChangePassword from './Account/ChangePassword'\r\nimport Logout from './Account/Logout'\r\nimport tempAvatar from '../../../ava.jpg'\r\n\r\nclass Account extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newAvatar: \"\",\r\n            Firstname: \"\",\r\n            Lastname: \"\",\r\n            DateOfBirth: \"\",\r\n            Phone: \"\",\r\n            Email: \"\",\r\n            Address: \"\",\r\n            City: \"\",\r\n            Avatar: '',\r\n            Gender: 0,\r\n            Username: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var { infoUser } = this.props;\r\n        if (infoUser !== null) {\r\n            this.setState({\r\n                Username: infoUser.Username,\r\n                Firstname: infoUser.Firstname,\r\n                Lastname: infoUser.Lastname,\r\n                DateOfBirth: infoUser.DateOfBirth,\r\n                Phone: infoUser.Phone,\r\n                Email: infoUser.Email,\r\n                Address: infoUser.Address,\r\n                City: infoUser.City,\r\n                Avatar: infoUser.Avatar,\r\n                Gender: infoUser.Gender\r\n            })\r\n        }\r\n    }\r\n\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    newAvatar = (data) => {\r\n        this.setState({\r\n            Username: data.Username,\r\n            Firstname: data.Firstname,\r\n            Lastname: data.Lastname,\r\n            DateOfBirth: data.DateOfBirth,\r\n            Phone: data.Phone,\r\n            Email: data.Email,\r\n            Address: data.Address,\r\n            City: data.City,\r\n            Avatar: data.Avatar,\r\n            Gender: data.Gender\r\n        })\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    render() {\r\n        var {Firstname} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"account\">\r\n                    <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink-55\" data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\" href=\"/#\">\r\n                        <img\r\n                             src={ this.state.Avatar.data !== undefined ? \"data:image/jpg;base64,\" + (new Buffer(this.state.Avatar.data).toString('base64')) :\r\n                                \"data:image/jpg;base64,\" + this.state.Avatar}\r\n                            className=\"rounded-circle z-depth-0\"\r\n                            alt=\"ava\"\r\n                            id=\"avatar\"\r\n                            onError={this.loadDefaultImage}\r\n                        />\r\n                        {Firstname === '' ? this.props.username : Firstname}\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-lg-right dropdown-secondary \"\r\n                        aria-labelledby=\"navbarDropdownMenuLink-55 \">\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalUpdateProfile\">Profile</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalChangePass\">Change password</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalFeedback\">Help and Feedback</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalConfirmLogout\">Logout</a>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <UpdateProfile\r\n                        key={this.generateID()}\r\n                        infoUser={this.state}\r\n                        newAvatar={this.newAvatar}\r\n                    />\r\n                    <ChangePassword\r\n                        key={this.generateID()}\r\n                        username={this.props.username}\r\n                    />\r\n                    <Feedback />\r\n                    <Logout username={this.props.username}/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Account\r\n","import React, { Component } from 'react'\r\n\r\nclass Feedback extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade right\" id=\"modalFeedback\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n                    aria-hidden=\"true\" data-backdrop=\"false\">\r\n                    <div className=\"modal-dialog modal-full-height modal-right modal-notify modal-info\" role=\"document\">\r\n\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header blue-gradient\">\r\n                                <p className=\"heading lead\">Feedback request</p>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" className=\"white-text\">×</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"text-center\">\r\n                                    <i className=\"far fa-file-alt fa-4x mb-3 animated rotateIn\"></i>\r\n                                    <p><strong>Your opinion matters</strong></p>\r\n                                    <p>Have some ideas how to improve our product?\r\n                    <strong>Give us your feedback.</strong>\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <hr></hr>\r\n\r\n                                <p className=\"text-center\">\r\n                                    <strong>Your rating</strong>\r\n                                </p>\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-179\" value=\"option1\" defaultChecked />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-179\">Very good</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-279\" value=\"option2\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-279\">Good</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-379\" value=\"option3\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-379\">Mediocre</label>\r\n                                </div>\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-479\" value=\"option4\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-479\">Bad</label>\r\n                                </div>\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-579\" value=\"option5\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-579\">Very bad</label>\r\n                                </div>\r\n\r\n                                <p className=\"text-center\">\r\n                                    <strong>What could we improve?</strong>\r\n                                </p>\r\n                                <div className=\"md-form\">\r\n                                    <textarea type=\"text\" id=\"form79textarea\" className=\"md-textarea form-control\" rows=\"3\"></textarea>\r\n                                    <label htmlFor=\"form79textarea\">Your message</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer justify-content-center\">\r\n                                <a type=\"button\" className=\"btn btn-primary waves-effect waves-light morpheus-den-gradient\" href=\"/#\">Send\r\n                  <i className=\"fa fa-paper-plane ml-1\"></i>\r\n                                </a>\r\n                                <a type=\"button\" className=\"btn btn-outline-primary waves-effect\" data-dismiss=\"modal\" href=\"/#\">Cancel</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback\r\n","import React, { Component, createRef } from 'react'\r\nimport tempAvatar from '../../../../ava.jpg'\r\nimport { updateUserProfile } from '../../../../service/UserService';\r\nimport Resizer from 'react-image-file-resizer'\r\nclass UpdateProfile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Firstname: \"\",\r\n            Lastname: \"\",\r\n            DateOfBirth: \"\",\r\n            Phone: \"\",\r\n            Email: \"\",\r\n            Address: \"\",\r\n            City: \"\",\r\n            Avatar: {\r\n                type: \"Buffer\",\r\n                data: Array(0)\r\n            },\r\n            Gender: 0,\r\n            Username: \"\",\r\n            notification: \"\",\r\n            file: \"\",\r\n            user: null\r\n        }\r\n        this.inputFile = createRef()\r\n    }\r\n    componentDidMount() {\r\n        var { infoUser } = this.props;\r\n        if (infoUser !== null) {\r\n            this.setState({\r\n                Username: infoUser.Username,\r\n                Firstname: infoUser.Firstname,\r\n                Lastname: infoUser.Lastname,\r\n                DateOfBirth: infoUser.DateOfBirth,\r\n                Phone: infoUser.Phone,\r\n                Email: infoUser.Email,\r\n                Address: infoUser.Address,\r\n                City: infoUser.City,\r\n                Avatar: infoUser.Avatar,\r\n                Gender: infoUser.Gender\r\n            })\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.infoUser !== state.infoUser && props.infoUser !== null) {\r\n            return {\r\n                infoUser: props.infoUser\r\n            }\r\n        }\r\n        return null;\r\n\r\n    }\r\n    onHandleChange = (event) => {\r\n        var target = event.target;\r\n        var names = target.name;\r\n        var values = target.value;\r\n        if (names === 'Gender') {\r\n            values = target.value === '0' ? 0 : 1;\r\n        }\r\n        this.setState({\r\n            [names]: values\r\n        })\r\n    }\r\n    updateUserProfile = async (e) => {\r\n        e.preventDefault();\r\n        await updateUserProfile(this.state)\r\n            .then(res => {\r\n                this.setState({\r\n                    notification: res.result\r\n                })\r\n            }).catch(err => console.log(err));\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 150, 150, 'JPEG', 100, 0,\r\n            uri => {\r\n                resolve(uri);\r\n            },\r\n            'base64'\r\n        );\r\n    })\r\n    _onChange = (e) => {\r\n        var target = e.target.files[0];\r\n        const image = this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',') + 1);\r\n            this.setState({\r\n                Avatar: r,\r\n                file: r\r\n            });\r\n        });\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close =async () => {\r\n        this.props.newAvatar(this.state);\r\n        await this.setState({\r\n            Firstname: \"\",\r\n            Lastname: \"\",\r\n            DateOfBirth: \"\",\r\n            Phone: \"\",\r\n            Email: \"\",\r\n            Address: \"\",\r\n            City: \"\",\r\n            Avatar: {\r\n                type: \"Buffer\",\r\n                data: Array(0)\r\n            },\r\n            Gender: 0,\r\n            Username: \"\",\r\n            notification: \"\",\r\n            file: \"\"\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\"\r\n                    id=\"modalUpdateProfile\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"static\" aria-labelledby=\"myModalLabel\">\r\n                    <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"file-field text-center\">\r\n                                    <div className=\"mb-1\">\r\n                                        <img\r\n                                            src={ this.state.Avatar.data !== undefined ? \"data:image/jpg;base64,\" + (new Buffer(this.state.Avatar.data).toString('base64')) :\r\n                                            \"data:image/jpg;base64,\" + this.state.Avatar}\r\n                                            alt=\"ava\"\r\n                                            onError={this.loadDefaultImage}\r\n                                            className=\"rounded-circle img-responsive modal-title avatar-pic\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <label className=\"btn btn-rounded float-center\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ display: \"none\" }}\r\n                                                onChange={this._onChange}\r\n                                                ref={this.inputFile}\r\n                                            />\r\n                                            Upload Avatar\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <button type=\"button\" className=\"close\" onClick={this.close} data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <h5 className=\"mt-1 text-center\"><b>\r\n                                {this.state.Username}</b></h5>\r\n                            <div className=\"modal-body mx-3 \">\r\n                                <form onSubmit={this.updateUserProfile}>\r\n                                    <table className=\"tbl-update-profile mb-5\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-phone-volume prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"tel\"\r\n                                                            id=\"phone\"\r\n                                                            className=\"form-control\"\r\n                                                            pattern=\"[0]{1}[0-9]{9}\"\r\n                                                            placeholder=\"Phone\"\r\n                                                            name=\"Phone\"\r\n                                                            defaultValue={this.state.Phone}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-envelope prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"email\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Email\"\r\n                                                            data-error=\"wrong\"\r\n                                                            data-success=\"right\"\r\n                                                            name=\"Email\"\r\n                                                            defaultValue={this.state.Email}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-signature prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"firstname\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Firstname\"\r\n                                                            name=\"Firstname\"\r\n                                                            defaultValue={this.state.Firstname}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-signature prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"lastname\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Lastname\"\r\n                                                            name=\"Lastname\"\r\n                                                            defaultValue={this.state.Lastname}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-birthday-cake prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            id=\"dateofbirth\"\r\n                                                            className=\"form-control grey-text \"\r\n                                                            name=\"DateOfBirth\"\r\n                                                            defaultValue={this.state.DateOfBirth}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-map-marker-alt prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"address\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Address\"\r\n                                                            name=\"Address\"\r\n                                                            defaultValue={this.state.Address}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-building prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"city\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"City\"\r\n                                                            name=\"City\"\r\n                                                            defaultValue={this.state.City}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <span className=\"radio-gender\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                name=\"Gender\"\r\n                                                                defaultValue={0}\r\n                                                                checked={this.state.Gender === 0}\r\n                                                                onChange={this.onHandleChange}\r\n                                                            />\r\n                                                &nbsp;Male &nbsp;&nbsp;&nbsp;\r\n                                                <input\r\n                                                                type=\"radio\"\r\n                                                                name=\"Gender\"\r\n                                                                defaultValue={1}\r\n                                                                checked={this.state.Gender === 1}\r\n                                                                onChange={this.onHandleChange}\r\n                                                            />\r\n                                                &nbsp;Female\r\n                                                </span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <span className=\"update-profile-notification\" >{this.state.notification}</span>\r\n                                    </div>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <input\r\n                                            type=\"submit\"\r\n                                            value=\"Update\"\r\n                                            id=\"updateProf\"\r\n                                            className=\"btn btn-primary morpheus-den-gradient\"\r\n                                        />\r\n                                        <button className=\"btn\" data-dismiss=\"modal\" onClick={this.close}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateProfile\r\n","import React, { Component, createRef } from 'react'\r\nimport { changePass } from '../../../../service/UserService';\r\n\r\nexport class ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notification: \"\",\r\n            username: \"\"\r\n        }\r\n        this.oldpass = createRef();\r\n        this.newpass = createRef();\r\n        this.confpass = createRef();\r\n    }\r\n    changePass = async (e) => {\r\n\r\n        e.preventDefault();\r\n        var oldpass = this.oldpass.current.value;\r\n        var newpass = this.newpass.current.value;\r\n        var confpass = this.confpass.current.value;\r\n        if (newpass === confpass) {\r\n            if (oldpass === newpass) {\r\n                await this.setState({\r\n                    notification: \"Old password and New password cannot be same\"\r\n                })\r\n            }\r\n            else {\r\n                await changePass(oldpass, newpass, this.props.username)\r\n                    .then(res => {\r\n                        this.setState({\r\n                            notification: res.result\r\n                        })\r\n                    }).catch(err => console.log(err));\r\n                if (this.state.notification === \"Change password successfully!\") {\r\n                    this.oldpass.current.value = null;\r\n                    this.newpass.current.value = null;\r\n                    this.confpass.current.value = null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            await this.setState({\r\n                notification: \"Confirm password doesn't match\"\r\n            })\r\n        }\r\n\r\n    }\r\n    close = () => {\r\n        this.oldpass.current.value = null;\r\n        this.newpass.current.value = null;\r\n        this.confpass.current.value = null;\r\n        this.setState({\r\n            notification: \"\"\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"modalChangePass\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"static\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <i className=\"fas fa-lock prefix grey-text\"></i>\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">Change password</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body mx-3\">\r\n                                <form onSubmit={this.changePass}>\r\n                                    <div className=\"md-form mb-5\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"orangeForm-oldPass\"\r\n                                            name=\"oldPass\"\r\n                                            ref={this.oldpass}\r\n                                            placeholder=\"Old password\"\r\n                                            required=\"required\"\r\n                                            className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"md-form mb-5\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"orangeForm-newPass\"\r\n                                            ref={this.newpass}\r\n                                            name=\"newPass\"\r\n                                            required=\"required\"\r\n                                            placeholder=\"New password\"\r\n                                            className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"md-form mb-4\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"orangeForm-confirmPass\"\r\n                                            ref={this.confpass}\r\n                                            name=\"confirmPass\"\r\n                                            required=\"required\"\r\n                                            placeholder=\"Confirm new password\"\r\n                                            className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <span className=\"change-pass-notification\" >{this.state.notification}</span>\r\n                                    </div>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <input\r\n                                            className=\"btn btn-unique\"\r\n                                            type=\"submit\"\r\n                                            value=\"Save\"\r\n                                        />\r\n                                        <button className=\"btn\" data-dismiss=\"modal\" onClick={this.close}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Login from '../../../../Login/Login';\r\nimport { logout } from '../../../../service/UserService';\r\nimport dateFormat from 'dateformat';\r\n\r\nclass Logout extends Component {\r\n    onLogOut = (e) => {\r\n        logout([this.props.username, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\")]);\r\n        localStorage.removeItem('user');\r\n        this.componentWillUnmount();\r\n        e.preventDefault();\r\n        ReactDOM.render(\r\n            <React.StrictMode>\r\n            <Login/>\r\n            </React.StrictMode>,\r\n            document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"modalConfirmLogout\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-sm modal-notify modal-primary \" role=\"document\">\r\n                        <div className=\"modal-content text-center\">\r\n                            <div className=\"modal-header flex-center justify-content-center blue-gradient\">\r\n                                <h3>Are you sure?</h3>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <i className=\"fas fa-sign-out-alt fa-4x animated rotateIn logoutIcon\"></i>\r\n                            </div>\r\n                            <div className=\"modal-footer flex-center\">\r\n                                <a href=\"/\" className=\"btn  btn-outline-primary\" onClick = {this.onLogOut}>Yes</a>\r\n                                <a href=\"/#\" type=\"button\" className=\"btn  btn-primary waves-effect morpheus-den-gradient\" data-dismiss=\"modal\">No</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout\r\n","export async function getListContact(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/contact', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ data: data })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\nexport async function getListMessages(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/listMessages', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ data: data })\r\n    });\r\n    return await response.json();\r\n}\r\nexport async function getListGroup(data) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/listGroup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ data: data })\r\n    });\r\n    return await response.json();\r\n}\r\nexport async function getInfoMemGroup(ID_Room) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/listGroup/info', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ info: ID_Room })\r\n    });\r\n    return await response.json();\r\n}\r\nexport async function checkRegister(data) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user: data })\r\n    });\r\n    return await response.json();\r\n}\r\n//Api login\r\nexport async function login(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: data[0], password: data[1], timeOnline: data[2], check: data[3] })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Lay tin nhan chat giua 2 user\r\nexport async function getMessages(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/messages', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ idRoom: data })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Add message\r\nexport async function addMessage(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/messages/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: data[0], idRoom: data[1], message: data[2], time: data[3] })\r\n    });\r\n    return await response.json();\r\n}\r\n//update user profile\r\nexport async function updateUserProfile(user) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/user/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user: user })\r\n    });\r\n    return await response.json();\r\n}\r\n//change password\r\nexport async function changePass(oldpass,newpass, username) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/user/updatePass', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ oldpass: oldpass,newpass: newpass, username: username })\r\n    });\r\n    return await response.json();\r\n}\r\n//search user through phone number\r\nexport async function searchUser(phone) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/user/search', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ phone:phone })\r\n    });\r\n    return await response.json();\r\n}\r\n//Check if isFriend\r\nexport async function checkStatusFr(user1,user2) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/friend', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user1: user1,user2:user2 })\r\n    });\r\n    return await response.json();\r\n}\r\n//Insert friend\r\nexport async function sendRequest(id,sender,receiver,time) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/friend/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,sender:sender,receiver:receiver,time:time })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//insert tbl_chatroom\r\nexport async function createChatRoom(id,name,avatar) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/chatroom/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,name:name,avatar:avatar})\r\n    });\r\n    return await response.json();\r\n}\r\n//update tbl_chatroom\r\nexport async function updateRoom(id,avatar) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/chatroom/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,avatar:avatar})\r\n    });\r\n    return await response.json();\r\n}\r\n//get tbl_chatroom\r\nexport async function getInfoRoom(id) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/chatroom', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id})\r\n    });\r\n    return await response.json();\r\n}\r\n//insert tbl_participants\r\nexport async function addParticipants(id,id_room,list) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/participants/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,id_room:id_room,list:list})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//get participants\r\nexport async function getListMembers(idRoom) {\r\n\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/participants', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({idRoom:idRoom})\r\n    });\r\n    return await response.json();\r\n}\r\n//Api notifications\r\nexport async function getNotifications(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/notifications', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username: data})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//data = [sender, receiver, isFriend] -> isFriend: accept: 0 || deny: 1\r\n//Accept FR\r\nexport async function acceptFriendRequest(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/friend/accept', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({data: data})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Read notification\r\nexport async function readNotification(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/notifications/read', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username: data})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Api logout\r\nexport async function logout(data) {\r\n    const response = await fetch('https://shrouded-castle-36016.herokuapp.com/api/login/logout', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: data[0], time: data[1]})\r\n    });\r\n    return await response.json();\r\n}"],"sourceRoot":""}